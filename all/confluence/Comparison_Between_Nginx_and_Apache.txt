title: Comparison Between Nginx and Apache
body: Nginx and Apache are popular web servers used to deliver web pages to a user's
browser. Apache was first released in 1995, Nginx was released in 2004. Here
is a comparison between Apache and Nginx.

##  **Active Health Checks**

Nginx, with the help of a third party plugin named upstream check module, can
periodically check the health of upstream servers by sending special health
check requests to each server and verifying the correct response. For this,
Nginx can check for and catch failure better, thus enhancing performance. On
the other hand, The method for Apache to handle the active health check is old
and it performs poorly.

##  **Performance**

 **1 . Handling Requests**

Apache processes requests with MPM-s or Multi-Processing-Modules, which is
responsible for binding to network ports on the machine, accepting requests,
and dispatching children to handle the requests. Apache uses processes for
every connection (and with worker mpm it uses threads). As traffic rises, it
quickly becomes too expensive.

Nginx uses asynchronous, non-blocking event-driven architecture. Nginx ideally
has one worker process per CPU/core. The difference for Nginx worker processes
is that each one can handle hundreds of thousands of incoming network
connections per worker. There is no need to create new threads or processes
for each connection.

 **2\. Caching**

 **Static cache:** Nginx is very efficient in serving static content on its
own. Nginx performs 2.5 times faster than Apache according to a benchmark test
performed by running up to 1,000 simultaneous connections. Another benchmark
running with 512 simultaneous connections, showed that Nginx is about twice as
fast and consumes less memory. Undoubtedly, Nginx has an advantage over Apache
with static content.

 **dynamic cache:** FastCGI caching is natively available in a standard Nginx
installation. It is a simple, very powerful Nginx feature. Apache has a
mod_cache module which tends to be glitchy, conflicting with other modules. So
the standard caching solution deployed with Apache is Varnish HTTP
accelerator. Although Varnish is the dedicated industry solution, some tests
[give Nginx caching a clear edge](https://deliciousbrains.com/page-caching-
varnish-vs-nginx-fastcgi-cache-2018/) over Varnish.

  

 **3\. Configuration**

Apache uses .htaccess for its configuration. Every level or directory in the
directory tree can have its own .htaccess file with its own configuration.
Nginx does not have a configuration system like Apache. By not allowing
directory-level configurations, Nginx gains a significant edge over Apache.
Article on [Nginx
wiki](https://www.nginx.com/resources/wiki/start/topics/examples/likeapache-
htaccess/) compares performance impact.

##  **Security**

Apache and Nginx, both offer great extended security for its C-based code
base. However, the Nginx code base is significantly smaller by several orders
of magnitude. So that is definitely a big plus from a forward-thinking
security perspective. Nginx being a relatively newer platform, has updated
security protocols and also has a list of recent security advisories. So,
Nginx is considered more secure.

##  **Proxy Server, Load Balancer, HTTP Cache**

Apache and Nginx process and interpret requests in an entirely different
manner. Apache provides the ability to interpret requests as a physical
resource on the file system location. On the other hand, Nginx doesn't provide
a mechanism for specifying configuration for file system directory, instead
passes their URI itself. This very design of interpreting requests as URI
locations allows Nginx to easily function as not only a web server but also as
a proxy server, load balancer, and HTTP cache.

##  **Resource  ** **Utilisation**

Nginx has asynchronous, non-blocking event-driven architecture. So it doesn't
spawn processes to handle every new connection. For that, it has a very low
memory consumption. On the other hand, Apache has the requirement of creating
a new process for each request. So, it has a very high memory consumption.

##  **Support and Documentation**

Apache has been in the market for a very long time and has excellent support
and documentation is available. For Nginx, although there was a weak start for
support and documentation, it has grown rapidly since. Now it has excellent
resource support and documentation available as well.

  

Considering issues like health check, performance, security, resource
utilization etc. it is clear to us that we use Nginx over Apache for all
practical purposes.


