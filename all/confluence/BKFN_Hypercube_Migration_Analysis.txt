title: BKFN Hypercube Migration Analysis
body:   

Document Status|

YellowDRAFT  
  
---|---  
Document Owner|

  
  
  

# Bank Financial

32circle

#  **Frontend:**

##  **ROOT**

  
|  
  
---|---  
 **Client Name**|  Bank Financial  
 **Schema**|  Bank  
 **Login Method**|

  * DI (IFSIB)
    * IFSIBhblogin.jsp
    * IFSIBssoexchange.jsp
  * DI (IFSBB)
    * IFSBBhblogin.jsp
    * IFSBBssoexchange.jsp
  * DI (IFSBFS)
    * IFSBFShblogin.jsp
    * IFSBFSssoexchange.jsp

  
 **Enrollment Step**|

Based on SSO Date

  * 3 Steps

  
 **Welcome Email**|  Yes  
 **Menu**|

  * Commercial Loan Statements (if acct_type=53, otherwise eStatements)
  * eStatements
  * Escrow Analysis(if acct_type=45/50/53)
  * eNotice
  * eTax
  * Account Reconciliation
  * HELOC Reconciliation
  * CD Maturity Disclosure
  * Profile
  * Exit

  
 **Account Types**|

  * 00
  * 02
  * 10
  * 20
  * 30
  * 45
  * 46
  * 50
  * 51
  * 52
  * 53
  * 94
  * 95

  
 **Statement Types**|

  * default (eStatements)
  * etax (eTax)

  
 **Archival Period**|

  * Default: 60
  * Etax: 60

  
 **Paperless Configuration**|  bySelective  
 **Delivery Preference**|

  * Online (E)
  * Paper (B)

  
 **Notification Preference**|  Email-only  
 **NP Link Type**|  byUFA  
 **Batch Download  **| N/A  
 **DSO login**|  N/A  
 **User-Account Relation**|  One to Many  
  
###  **Database Migration**

 **USR_SESSION** :

 **USR_MAPPING** :

 **NOTIFICATION_PREFERENCE** :

###  **SSO (signlesignon7)**

####  **DI (IFSIB):**

  *  **IFSIBhblogin.jsp**
    * Fields: **CIF** , email, **pswd** , **gmt, timeout.**
    * Remove all leading zeroes of CIF number.
    * Check whether cifNum exist in usr_mapping:
      * Find the UserDetails from the USR_MAPPING table by cif_num and org_id. If UserDetails is null throw an error message.
    * Check whether USR has profile in the USR_SESSION:
      * Find UserProfile by cif_num nad org_id from USR, USR_SESSION, USR_FIN_ACCOUNT, FIN_ACCOUNT, USR_MAPPING.
        * If UserProfile is not found create a new user with loginName=!usr_id, org_id, org_name, password, details, dso=null and Insert into DB.
      * If login status is 'invalid' or login has dso date then throw an error message.
    * Generate a   **key** by loginId, email, and timeStamp.

  *  **IFSIBssoexchange.jsp**  

    * Get ssoKey from the request and check ssoKey validation.
    * Check if the key is Expired (timeToExpire being 60 seconds)
    * Check if the user has any UFA
      * Find UFAS by usr_id, If not found throw an errorMessage 'MISSING_UFA'.
    * Set session attribute: ssoLogin=true, email.
    * If SSO date is not null redirect to  **/home.jsp**  page otherwise redirect to  **/enroll/test.jsp**  page.

####  **DI (IFSBB):**

  *  **IFSBBhblogin.jsp**
  *  **IFSBBssoexchange.jsp**

###  **Enrollment (SSO)**

  * The user goes through the enrollment based on the following condition:
    1. If the user never login via SSO, So the SSO date is null and then goes through the 3 steps of enrollment.
  *  **Enrollment Step 1:**  Pdf View.

  

  *  **Enrollment Step 2:  **

    * E-Sign Disclosure and Consent.
    * Adding the primary email.
    * By clicking the "ACCEPT" button, signifying the acceptance of eStatement Disclosure.

  

  *  **Enrollment Step 3:  **
    * Shows: Account number, Account holder name, Application.
    * The user can choose the delivery preference  ** _Online Only_**  or  ** _Paper Only_**.
    * Email Address updatable.
    * If DP select Online(E) then Primary email and Secondary email(if provide) insert in the NP table.
    * If DP select Paper(B) then Secondary email insert in the NP table if the secondary email didn't provide then no data insert in the NP table.
    * Provided email address in enrollment 2, If primary email exists in NP table then doesn't show the provided email in enrollment 3 as email address.
    * Secondary email doesn't show though exists in the NP table.
    * For all accounts, The delivery preference can update by clicking the submit button.

  

###  **Menu Tabs**

  *  **eStatements:**
    * When ACCT_TYPE is '53' then show the _Commercial Loan Statements_ , Otherwise, show the _eStatements_.
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Date, Status, News, and Notices.
    * When clicking on _Statement Date_ open a statement details pdf in the new tab.

  

  *  **Commercial Loan Statements:**
    * When ACCT_TYPE is '53' then show the _Commercial Loan Statements_ , Otherwise, show the _eStatements_.
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Date, Status, News, and Notices.
    * When clicking on _Statement Date_ open a statement details pdf in the new tab.

  

  *  **Escrow Analysis:**
    * Currently don't support Escrow Analysis statements.

  

  *  **eNotice:**
    * Currently don't support eNotice statements.

  

  *  **eTax:**
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Year and Form Name.
    * When clicking on _Form Name_ open a statement details pdf in the new tab.

  

  *  **Account Reconciliation:**
    * When clicking on the Account Reconciliation button open a **/disclosure.pdf** in the new tab.

  

  *  **HELOC Reconciliation:**
    * When clicking on the HELOC Reconciliation button open a **/LOC disclosure.pdf** in the new tab.

  

  *  **CD Maturity Disclosure:**
    * When clicking on the HCD Maturity Disclosure button open a **/CD Maturity Disclosure.pdf** in the new tab.

  

  *  **Profile**
    * User Information:
      * Showing _Username_ and _Registration Date_.
    * Delivery Preference:
      * Showing Account Number, Account Holder Name, Application, and DP status.
      * Email addresses are updatable.
      * Secondary email insert into the DB as a new row in NP table.

  

  *  **Exit:**
    * When clicking on the Exit menu close the browser.

###  **DSO**

DSO has the following features:

  * Login
  * Return to Home Page
  * Forget your password?
  * Enrollment or Register Now
  * Menu Tabs

####  **Login**

  * During login required fields are:
    * Username
    * password 
  * For first-time login, It redirects to a page called  _ **token_recovery**_. There are two options there: 
    1. I'm on a public computer. Please log me in without creating any token.
    2. Please log me in and create a token on my computer.
      * If the second option is selected then it creates and stores the token into the  **USR_TOKEN**  table for that computer. And it doesn't redirect to the  ** _token_recovery_**  page in future login from that computer.

  

####  **Return to Home Page**

  * If you've already registered through personal or business online banking to receive eStatements you need to access your eStatements within Online Banking instead of this page. Click here to return to our Home Page.

  

####  **Forget your password?**

  * First, Need to verify the Username, Account Number, and Application.
  * And then Security checks by entering the correct security question's answer.
  * After that enter the New Password and Confirm New Password.

  

 **Enrollment or Register Now**

  * The user goes through the enrollment based on the following condition:
    1. Based on the DSO date the user goes through the 4 steps of enrollment.
  *  **Enrollment Step 1:**
    * PDF View

  

  *  **Enrollment Step 2:**
    * E-Sign Disclosure and Consent.
    * By clicking the "ACCEPT" button, signifying the acceptance of eStatement Disclosure.

  

  *  **Enrollment Step 3:** Entering some valid information.
    * Login Information:
      * Login ID
      * Password
      * Confirm Password
      * Password Hint Phrase
      * Hint Phrase Answer
    * Contact Information:
      * E-mail Address
      * Confirm E-mail Address
    * Account Verification:
      * Application
      * Account Number
      * TIN (CIF)

  

  *  **Enrollment Step 4:**
    * The user can choose the delivery preference  ** _Online Only_**  or  ** _Paper Only_**.
    * Email Address updatable.

  

 **Menu Tabs**

  *  **eStatements:**
    * When ACCT_TYPE is '53' then show the _Commercial Loan Statements_ , Otherwise, show the _eStatements_.
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Date, Status, News, and Notices.
    * When clicking on _Statement Date_ open a statement details pdf in the new tab.
    * Authorized Viewers:
      * Use the "Create Viewer" button to setup a new individual to view statements. Upon initial setup you can assign/authorize the viewer specific account statements to view.
      * Use the "Assign Viewers" button to assign existing authorized viewers (individuals already set up to view statements) specific account statements to view.
      * To manage the authorized viewers, please go to "Profile."

  

  *  **Commercial Loan Statements:**
    * When ACCT_TYPE is '53' then show the _Commercial Loan Statements_ , Otherwise, show the _eStatements_.
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Date, Status, News, and Notices.
    * When clicking on _Statement Date_ open a statement details pdf in the new tab.
    * Authorized Viewers:
      * Use the "Create Viewer" button to setup a new individual to view statements. Upon initial setup you can assign/authorize the viewer specific account statements to view.
      * Use the "Assign Viewers" button to assign existing authorized viewers (individuals already set up to view statements) specific account statements to view.
      * To manage the authorized viewers, please go to "Profile."

  

  *  **Escrow Analysis:**
    * Currently don't support Escrow Analysis statements.

  

  *  **eNotice:**
    * Currently don't support eNotice statements.

  

  *  **eTax:**
    * Account Number: Here shows the **[account number] - [account type name]** in the dropdown menu.
    * Shows statements: Year and Form Name.
    * When clicking on _Form Name_ open a statement details pdf in the new tab.
    * Authorized Viewers:
      * Use the "Create Viewer" button to setup a new individual to view statements. Upon initial setup you can assign/authorize the viewer specific account statements to view.
      * Use the "Assign Viewers" button to assign existing authorized viewers (individuals already set up to view statements) specific account statements to view.
      * To manage the authorized viewers, please go to "Profile."

  

  *  **Account Reconciliation:**
    * When clicking on the Account Reconciliation button open a **/disclosure.pdf** in the new tab.

  

  *  **HELOC Reconciliation:**
    * When clicking on the HELOC Reconciliation button open a **/LOC disclosure.pdf** in the new tab.

  

  *  **CD Maturity Disclosure:**
    * When clicking on the HCD Maturity Disclosure button open a **/CD Maturity Disclosure.pdf** in the new tab.

  

  *  **Profile**
    * User Information:
      * Showing _Username,_   _Registration Date, Login ID, Password, Security Phrase to Recover Forgotten Password, Security Hint to Recover Forgotten Password_.
    * Delivery Preference:
      * Showing Account Number, Account Holder Name, Application, and DP status.
      * Email addresses are updatable.
      * Secondary email insert into the DB as a new row in the NP table.
    * Authorized Viewers:
      * Who are authorized to view the accounts.
      * User can Create up to 10 authorized viewers.
      * User can Edit viewers profile.
      * User can Remove viewer.
      * The viewer's users id Insert in the USR_TREE table as child id.

  

  *  **Exit:**
    * When clicking on the Exit menu redirect the signoff.jsp page and successfully logged out.

  

  

* * *

##  **MSM**

MSM has the following features:

  * Account Management

  * Email Proofing

  * Insert Management

  * Reports

  * Profile

  * Administration

  * Account Creation

  * Exit

### Account Management

  * Search account information and statements by account number.
  * Shows all account numbers by searching email address.
  * Shows the Account Information: Customer CIF, Customer Name, Assisted Employee ID, Account Number, Account Holder Name, Account Application, Account Status, Account Open Date, Customer Register Status, Customer Last Login Time, Customer Last Statement View Time.
  * Shows the Delivery Preference: Status, Email Address, 2nd Email Address.
  * Admin can update the email address.
  * Admin can update the delivery preference.
  * Admin can Unenroll SSO.

  

### Email Proofing

  * Statement types:
    * eStatements  

      *  **Keywords** : _sdv_txt_userName_  (To display the customer's name).
    * Commercial Loan Statements  

      *  **Keywords** : _sdv_txt_userName_  (To display the customer's name).
    * eNotices
      *  **Keywords** :  _sdv_txt_eNoticeList_ (To display the list of eNotices), _sdv_txt_userName_ (To display the customer's name).
    * Tax documents  

      *  **Keywords** :  _sdv_txt_eTaxList_ (Within the email content, it will be replaced by the tax form name when the notifications are sent out), _sdv_txt_userName_ (To display the customer's name).
    * Welcome  

      *  **Keyword** : _sdv_txt_userName_ (To display the customer's name).

  

### Upload Inserts

  * Inserts available for: 
    * eStatements
    * Commercial Loan Statements
  * Can choose one method from the available two methods:
    * Display this insert on the closing date. (Shows the Closing Date)
    * Display this insert within the day range. (Shows the Begin Date, End Date)

  

### Reports

Reports:

  *     1. Latest Stats
    2. User Login Activity
    3. AI Login Activity
    4. Email Address Collection
      *  **Report Data:  **Account Number, Account Owner Name, E-mail Address.
      *  **DB Used:**  CONTACT_INFO, USR, FIN_ACCOUNT, USR_FIN_ACCOUNT.
    5. Enrollment Assistant Report
    6. Paperless
      *  **Report Data** : Date, Opt-in, Opt-out, Acc. Opt-out.
      *  **DB Used** : PAPERLESS, FIN_ACCOUNT.
    7. Registered Users
    8. Marketing Insert Report
    9. Members Who Have Accepted The Disclosure
    10. DSO Report
    11. Undelivered Report
  * Can download the reports as  **.txt**  file or  **.xlsx**  file.

  

### Administration

  * Can change admin user's credentials. 
  * Can create/view/modify/remove other users that have lower privileges.



### Exit

  * Logged off the user. 

  

* * *

##  **Processing UI**

### BACKEND PROCESSES

HTBK has 4 processes,

  1. AFP
  2. AUTH
  3. ENOTICE4
  4. CHECK_IMAGE

### Settings

  * global.multipleStmtType=true
  * global.multipleDocType=false
  * global.autoRegister=false
  * global.ssoKey=78aB*3J99x
  * global.enableAccountType=false
  * global.acctNumHasLeadingZeros=false

### Statement Types and Index file prefix

  *  **global.ds2** =default
  *  **global.ma1** =analysis
  *  **global.aa1** =analysis
  *  **global.lb1** =loan
  *  **global.lb2** =loan

### AFP Process

Flags:

  * afp.compression=false
  * afp.isZipped=true
  * afp.copyZipBuffer=65536
  * afp.storage.path=a
  * afp.automatedEmailNotification=true
  * afp.isSharingAfps=true
  * afp.default.estmtselinsert=true

#### Handler: AfpStatementData9

  * Each line in the process file must contain 12/13/14/15 fields. 
  * FIelds:  ** _fileName_** _  | _ ** _acctNum_** _  | _ ** _beginDate_** _  | _ ** _closingDate_** _  | _ ** _numOfPages_** _  | _ ** _acctName_** _  | SSN | appType | messageIds | hasCheckStr | insertId | regionCode | crippleFlag | zipFileName_ .
  * If  _crippleFlag_  is present must have a value of either "C" or "R". 

**  **Bold**  indicates all are mandatory fields.

#### Registrar: MessageEStmtRegistrar3

  * autoRegister=false, enableAccountType=false, acctlookup=false, nullDsoTimeStamp=false.
  * Find account from the FIN_ACCOUNT by org_id and acct_num.
    * If account not found create a account and Insert data into the  **FIN_ACCOUNT**  table. As autoRegister is 'false' doesn't create the new user profile.
    * If account found:-
      * Check the  ** _acctName_**  provided by the index file. If it does not match with the account name in the database, update it in the  **FIN_ACCOUNT**  table. 
      * Does not update the account name if the name is either "MEMBER" or "CUSTOMER". 
  * Find paperless from the PAPERLESS2 table by acct_id and atmt_type.
    * If paperless not found:-
      * Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="1", modifiedDate, newStatus="B", oldStatus="N", stmtType.
      * If stmtType is "default" then Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="1", modifiedDate, newStatus="B", oldStatus="N", stmtType="default".
  * Insert statements data into the  **ESTMT_DOC** ,  **ESTMT_FILE** , and  **ARCH_FILE**  tables.
  * As imageMessage is "true" for the default statement.
    * Insert data into the  **ESTMT_MSG_DETAIL**  and  **ESTMT_MSG**  tables.
  * Insert data into the  **P_JOB_ESTMT**  table.

Database Changes: FIN_ACCOUNT, PAPERLESS, ESTMT_DOC, ESTMT_FILE, ARCH_FILE,
ESTMT_MSG_DETAIL, ESTMT_MSG, P_JOB_ESTMT.

### AUTH Process

Flags:

  * auth.classPath=com.infoimage.processing.application.auth.handler.HtbkAuthHandler
  * auth.permission=7
  * auth.filter.UserHiercs.inverse=S
  * auth.removal.threshold=25

 **Handler** :  **HtbkAuthHandler**

  * Each line in the process file must have 4 fields. 
  * Fields: _  **acctNum  **|  **fullName  **|  **ssn  **|  **cif=ssn  **| dob._

 **  **Bold**  indicates all are mandatory fields.

#### Registrar: HtbkAuthRegistrar

  * Find account from the FIN_ACCOUNT by org_id and acct_num.
    * If account not found create a account and Insert data into the  **FIN_ACCOUNT**  table with org_id, acct_num, acct_name, status="A", lastModified.
  * Find paperless from the PAPERLESS2 table by acct_id and atmt_type.
    * If paperless not found:-
      * Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="0", modifiedDate, newStatus="B", oldStatus="N", stmtType.
  * Find user from the USR_MAPPING table.
    * If the user is not found create a new user and Insert data into the  **USR**  and  **USR_MAPPING**  tables.
    * If the user is found, update the user.
  * Find ufa from the USR_FIN_ACCOUNT and FIN_ACCOUNT tables by user_id and acct_id.
    * If ufa not found create new userFinAccount with usr_id, acct_id, org_id, status="pre_reg" source="DSO" amd Insert data into the  **USR_FIN_ACCOUNT**  table.

Database Changes: FIN_ACCOUNT, PAPERLESS, USR, USR_MAPPING, USR_FIN_ACCOUNT.

### ENOTICE4 Process

Flags:

  * enotice4.compression=false
  * enotice4.acctTypeRequired=false
  * enotice4.isZipped=true
  * enotice4.copyZipBuffer=32768
  * enotice4.createAccount=false
  * enotice4.automatedEmailNotification=true

#### Handler: ENoticeData7

  * Each line in the process file must contain 11 or 12 fields. 
  * First(Record Type) and last(Record Terminator) field must be "L". 
  * Fields:  ** _L_** _  | acctNum | acctType | acctName | afpFileName | type | closingDate | imageCount | postCardFlag | _ ** _zipFileName | L_**  
  * If the account name is not present in the index file, the account number will be set as the account name after masking the first 2 or 4 characters. 
  *  postCardFlag value has to be 0 or 1 or null. 

 **  **Bold**  indicates all are mandatory fields.

#### Registrar: DefaultENotice4Registrar

  * createAccount=false,nullDsoTimeStamp=false.
  * Fin account from the FIN_ACCOUNT table, If account is found
    * Check the  ** _acctName_**  provided by the index file. If it does not match with the account name in the database, update it in the  **FIN_ACCOUNT**  table. 
    * Does not update the account name if the name is either "MEMBER" or "CUSTOMER" or "USER". 
  * If paperless is not found, Insert data into the  **PAPERLESS**  table with stmtType="enotice". 
  * Inserts enotice data in  **ENOTICE**  and  **ARCH_FILE**.
  * Inserts data into the  **P_JOB_ENOTICE**  table. 
  * Inserts data into the  **P_ENOTICE_COUNT**  table. 

Database changes: FIN_ACCOUNT, PAPERLESS, ENOTICE, ARCH_FILE, P_JOB_ENOTICE,
P_ENOTICE_COUNT.

### CHECK_IMAGE Process

Flags:

  * check_image.classPath=com.infoimage.processing.application.check.handler.DefaultCheckImageHandler3
  * check_image.multipleStmtType=false
  * check_image.isZipped=false
  * check_image.copyZipBuffer=65536
  * check_image.createFinAccount=true

#### Handler: DefaultCheckImageHandler3

  * Fields:  _acctNum | acctType | date | amount | number | traceNum | branchNum | tellerID | seqNum |  checkSide.tif_

 **Registrar: CheckImageRegistrar**

Database uses: USR_SESSION, FIN_ACCOUNT, USR_FINACCOUNT, ACCOUNT_CHECK_IMAGE.

### Email Notification Process

Flags:

  * email.hiddenMessage=np_id
  * email.default.needApproval=false
  * email.default.resetApproval=false
  * email.enotice.needApproval=false
  * email.enotice.resetApproval=false
  * email.enotice4.needApproval=false
  * email.analysis.needApproval=false
  * email.loan.needApproval=false
  * notification.isSendEmailViaAPI=true
  * notification.isEmailManageByEstmt=true

#### Handler: NotifyPrefEmailHandler

  * isSelectiveTemplate=false, isSelectiveMailServer=false, isSendEmailViaAPI=true, isEmailManageByEstmt=true, attachmentFeature=false, isSendViaAPI=true.
  * If notifyPref not found update notifyPref with notificationStatus="N", emailStatus="N", emailAttachmentStatus="N", smsStatus="N".
  * Fetch  _emailAddr, acctId, acctNum, name, ciId, esdId,  _If email not null.

Database Uses: FIN_ACCOUNT, USR_FIN_ACCOUNT, NOTIFICATION_PREFERENCE,
PAPERLESS2, USR, USR_SESSION, USR_ACCT_TYPE_MAPPING, P_EMAIL_COUNT.

### BACKEND REPORTS

The backend process has 3 reports,

  1. Bounceback Report
  2. Paperless Report
  3. Client Paperless Report

 **Bounceback Report**

  *  **Handler:**   **DefaultBounceBackHandler**
    * Get accountInfo from the  **FIN_ACCOUNT**  and  **NOTIFICATION_HISTORY**  tables by org_id, acct_id, np_id.
    * Get userInfo from the  **USR_MAPPING**  and  **NOTIFICATION_HISTORY**  tables by org_id, usr_id, np_id.

Database Uses: FIN_ACCOUNT, NOTIFICATION_HISTORY, USR_MAPPING.

 **Paperless Report**

  *  **Flags**
    * paperlessReport.stmtType1=default
    * paperlessReport.stmtType2=default,enotice

  *  **Handler:**   **DefaultPaperlessReport2**
    * Get organization from the  **ORGANIZATION**  table by org_uniquename.
    * Get record from the  **FIN_ACCOUNT**  and  **PAPERLESS2**  tables by org_id, acct_id, stmt_type, and p_latest_status.
  *  **Renderer:**   **DefaultPaperlessReportRender**
    * Displays acctNum | paperless status.

Database Uses: ORGANIZATION, FIN_ACCOUNT, PAPERLESS2.

 **Client Paperless Report**

  *  **Flags**
    * clientPaperlessReport.classPath=com.infoimage.processing.application.file.upload.handler.ClientPaperlessReport2
    * clientPaperlessReport.method=client_pickup
    * clientPaperlessReport.clientPickupPath=/d/SECURE3/Usr/htbk/client_pickup
    * clientPaperlessReport.customize.paperlessStatus={"B": "PRNT", "U": "WWW","E": "WWW", "W": "WBTH"}
    * clientPaperlessReport.notifyClient=true
    * clientPaperlessReport.email.subject=HTBK: Paperless Report Available
    * clientPaperlessReport.email.templatePath=/com/infoimage/processing/application/file/upload/email/client_pickup5.txt
    * clientPaperlessReport.file.delimiter=,
    * clientPaperlessReport.file.reportFormat=acctNum|paperlessStatus
    * clientPaperlessReport.file.timeZone=US/Pacific

  *  **Handler:**   **ClientPaperlessReport2**  

    * Will not save report data to SUMMARY_REPORTS table.
    * As notifyClient is true, it will send the email. The email will be sent via PostOffice. 
    * Get records using the  **FIN_ACCOUNT,**   **PAPERLESS2** ,  **USR_MAPPING,**  and  **USR**  tables by org_id and acci_id.

Database Uses: FIN_ACCOUNT, PAPERLESS2, USR_MAPPING, USR.



* * *

## Analysis Summary (ROOT)

Scope| Feature| HTBK Business| Hypercube| Note  
---|---|---|---|---  
  
 **Enrollment(SSO)**

|  User enrollment|

  * The user goes through the enrollment based on the following condition:
    1. If the user never login via SSO, so the SSO date is null then goes through the 3 steps of enrollment.

|  23557 complete  Supported  23558 incomplete Not Supported 23559 incomplete
Supported alternatively |  
  
Enrollment Step 1| Pdf View.|  23560 complete Supported  23561 incomplete Not
Supported 23562 incomplete Supported alternatively |  
  
Enrollment Step 2|

  * Agree to sign up for _Heritage Bank_ eStatements or Decline to go back.
  * By clicking the "ACCEPT" button, signifying the acceptance of all the terms, conditions, and notices contained.

|  23563 complete Supported  23564 incomplete Not Supported 23565 incomplete
Supported alternatively |  
  
Enrollment Step 3|

  * The user can choose the delivery preference **_Paperless Statements Only_** or **_Paper Only_** or **_Both Paperless and Paper_**.
  * Notification Preference Email Only.
  * Email Address Non-editable.

|  23566 complete Supported  23567 incomplete Not Supported 23568 incomplete
Supported alternatively |  
  
  
  * When choosing the delivery preference **_paper only_** then doesn't show the notification preference and email address and go through another page to accept the paperless statement condition.

|  23569 incomplete Supported  23570 complete Not Supported 23571 incomplete
Supported alternatively | We can support forced paperless but we do not
support the only paper restriction.  
 **Enrollment(DSO)**|  User enrollment|

  * The user goes through the enrollment based on the following condition:
    1. Based on the DSO date the user goes through the 5 steps of enrollment.

|  23572 complete Supported  23573 incomplete Not Supported 23574 incomplete
Supported alternatively |  
  
Enrollment Step 1|

  * eStatement Verification- PDF View

|  23575 complete Supported  23576 incomplete Not Supported 23577 incomplete
Supported alternatively |  
  
Enrollment Step 2|

  * Agree to sign up for _Heritage Bank_ eStatements or Decline to go back.
  * By clicking the "ACCEPT" button, signifying the acceptance of all the terms, conditions, and notices contained.

|  23578 complete Supported  23579 incomplete Not Supported 23580 incomplete
Supported alternatively |  
  
Enrollment Step 3|

  * Account Verification

|  23581 complete Supported  23582 incomplete Not Supported 23583 incomplete
Supported alternatively |  
  
Enrollment Step 4|

  * Login Information

|  23584 complete Supported  23585 incomplete Not Supported 23586 incomplete
Supported alternatively |  
  
Enrollment Step 5|

Preferences

  *     * The user can choose the delivery preference **_Paperless Statements Only_** or **_Paper Only_** or **_Both Paperless and Paper_**.
    * Notification Preference Email Only.
    * Email Address Non-editable.

|  23587 complete Supported  23588 incomplete Not Supported 23589 incomplete
Supported alternatively |  
  
  
  * When choosing the delivery preference **_paper only_** then doesn't show the notification preference and email address and go through another page to accept the paperless statement condition.

|  23590 incomplete Supported  23591 complete Not Supported 23592 incomplete
Supported alternatively | We can support forced paperless but we do not
support the only paper restriction.  
 **Login(DSO)**|  
|

  * During login required fields are:
    * Username
    * password 

|  23593 complete Supported  23594 incomplete Not Supported 23595 incomplete
Supported alternatively |  
  
  
| Token Recovery|

  * For first-time login, It redirects to a page called _**token_recovery**_. There are two options there: 
    1. I'm on a public computer. Please log me in without creating any token.
    2. Please log me in and create a token on my computer.
      * If the second option is selected then it creates and stores the token into the **USR_TOKEN** table for that computer. And it doesn't redirect to the **_token_recovery_** page in future login from that computer.

|  23596 incomplete Supported  23597 incomplete Not Supported 23598 complete
Supported alternatively | This is supported by MFA (Multi-factor
Authentication) in the hypercube.  
  
  *  **Forget your password? (DSO)**

|  
|

  * Af first, Security checks by entering the _Username, last 4 digits of SSN,_ and _Date of Birth_.
  * After that enter the _New Password_ and _Confirm New Password._

|  23599 complete Supported  23600 incomplete Not Supported 23601 incomplete
Supported alternatively |  
  
**Statements**|

  * Checking/Savings Statement
  * Account Analysis Statement
  * Loan Payment Due
  * eNotice

  

|

  * Statement Date
  * Status
  * Monthly Inserts

Note: For eNotice, Instead of _Monthly Inserts_ can be _Description_.

|  23602 complete Supported  23603 incomplete Not Supported 23604 incomplete
Supported alternatively |  
  
  
View Account:

Here shows the [ **account description]-[account number]** in the dropdown
menu. The account description gets from the  **USR_ACCT_TYPE_MAPPING**  table.

|  23605 complete  Supported  23606 incomplete Not Supported 23607 incomplete
Supported alternatively |

  
  
  
  * Disclosure verbiage

|

  

|  23608 complete  Supported  23609 incomplete Not Supported 23610 incomplete
Supported alternatively |  
  
Account Reconciliation|

  * Here shows the [ **account description]-[account number]** in the dropdown menu. The account description gets from the  **USR_ACCT_TYPE_MAPPING**  table.

|  23611 complete  Supported  23612 incomplete Not Supported 23613 incomplete
Supported alternatively |  
  
**Batch Download Documents**|  
|

  * Shows all the documents for both are **_active_** and **_closed_** accounts.
  * Batch Download Tasks: Shows the submitted files after _Compress into ZIP_.
  * Search option for documents.
  * Button to Compress into ZIP.

|  23614 complete  Supported  23615 incomplete Not Supported 23616 incomplete
Supported alternatively |  
  
**Profile(SSO)**|  Delivery Preference|

  * The user can't update the delivery preference.

|  23617 complete  Supported  23618 incomplete Not Supported 23619 incomplete
Supported alternatively |  
  
Notification Preference|

  * Notification Preference email only and Non-editable.

|  23620 complete  Supported  23621 incomplete Not Supported 23622 incomplete
Supported alternatively |  
  
Email Address|

  * Email address is Non-editable.

|  23623 incomplete  Supported  23624 complete Not Supported 23625 incomplete
Supported alternatively | Non-editable is supported but Non-editable for SSO
and Editable for DSO is not supported.  
 **Profile(DSO)**|

Password

|

The user can update the _Password_ and _Password Hint Question._

|  23626 complete  Supported  23627 incomplete Not Supported 23628 incomplete
Supported alternatively |  
  
Delivery Preference|

  * The user can't update the delivery preference.

|  23629 complete  Supported  23630 incomplete Not Supported 23631 incomplete
Supported alternatively |  
  
Notification Preference|

  * Notification Preference email only and Non-editable.

|  23632 complete  Supported  23633 incomplete Not Supported 23634 incomplete
Supported alternatively |  
  
Email Address|

  * Email address is Editable.

|  23635 incomplete  Supported  23636 complete Not Supported 23637 incomplete
Supported alternatively | Editable is supported but Non-editable for SSO and
Editable for DSO is not supported.  
 **Disclosure**|  
|

  * There are three types of disclosure
    1. Back of DDA
    2. Back of Statement Line of Credit
    3. Electronic Statement Consent and Authorization Disclosure

|  23638 complete  Supported  23639 incomplete Not Supported 23640 incomplete
Supported alternatively |  
  
**Exit**|  
|  Logs out a user by showing a confirmation page.|  23641 complete  Supported
23642 incomplete Not Supported 23643 incomplete Supported alternatively |  
  
  
  

## Analysis Summary (MSM)

Scope| Feature| HTBK Business| InfoTRAC| Note  
---|---|---|---|---  
Account Management|

Account Management

|

  * Search by Account Number
  * Search by E-mail Address

|  2715 complete  Supported  2716 incomplete Not Supported 2717 incomplete
Supported alternatively |  
  
  
  * Account Information
    * Customer Name
    * Account Number
    * Account Holder Name
    * Account Status
    * Customer Register Status
    * Customer Last Login Time
    * Customer Last Statement View Time
    * Delivery Preference
    * Notification Option
    * Email Address.

|  2718 complete  Supported  2719 incomplete Not Supported 2720 incomplete
Supported alternatively |  
  
  
  * Admin can't change the email address.

|  2721 complete  Supported  2722 incomplete Not Supported 2723 incomplete
Supported alternatively |  
  
  
  * Admin can update the delivery preference.

|  2724 complete  Supported  2725 incomplete Not Supported 2726 incomplete
Supported alternatively |  
  
  
  * Admin can Unenroll SSO.

|  25270 incomplete  Supported  25271 complete Not Supported 25272 incomplete
Supported alternatively |  
  
  
  * Admin can Delete the user.

|  25273 complete  Supported  25274 incomplete Not Supported 25275 incomplete
Supported alternatively |  
  
  
Application:

  * The Dropdown menu shows the statement types.

|  25276 complete  Supported  25277 incomplete Not Supported 25278 incomplete
Supported alternatively |  
  
  
Account Statements:

  * Statement Date
  * News and Notices

|  25279 complete  Supported  25280 incomplete Not Supported 25281 incomplete
Supported alternatively |  
  
Email Reminder|  
|

The user, who qualifies the following requirements, will receive the email
reminder:

  1.     * The user hasn't logged into e-Statements for the number of days that the admin specified.
    * The user has at least one unviewed e-Statement on the site.
    * The user hasn't received any email reminders.

|  2730 incomplete  Supported  2731 complete Not Supported 2732 incomplete
Supported alternatively | No longer supported.  
Reports|  
|

  * Latest Stats

|  25282 complete  Supported  25283 incomplete Not Supported 25284 incomplete
Supported alternatively |  
  
  
  * User Login Activity

|  25285 complete  Supported  25286 incomplete Not Supported 25287 incomplete
Supported alternatively |  
  
  
  * AI Login Activity

|  25288 complete  Supported  25289 incomplete Not Supported 25290 incomplete
Supported alternatively |  
  
  
  * AI User Activity
    *  **Report Data:**  User ID, User Status, Last Login Time, Last Password Changed Date.
    *  **DB Used:**  USR_SESSION.

|  25291 complete  Supported  25292 incomplete Not Supported 25293 incomplete
Supported alternatively |  
  
  
  * AI User Modification Activity Report
    *  **Report Data** : Modified By, Applied To Admin User, Modification Type, Modified Time
    *  **DB Used** : AUDIT_LOG_KFCU, USR_SESSION

|  25294 complete  Supported  25295 incomplete Not Supported 25296 incomplete
Supported alternatively |  
  
  
  * Admin User Report
    *  **Report Data** : Login ID, Name, Role, Last Login, Status
    *  **DB Used** : USR, USR_SESSION, NOTIFICATION_PREFERENCE.

|  25297 complete  Supported  25298 incomplete Not Supported 25299 incomplete
Supported alternatively |  
  
  
  * Email Address Collection
    *  **Report Data:  **Account Number, Account Owner Name, E-mail Address.
    *  **DB Used:**  CONTACT_INFO, USR, FIN_ACCOUNT, USR_FIN_ACCOUNT.

|  25300 complete  Supported  25301 incomplete Not Supported 25302 incomplete
Supported alternatively |  
  
  
  * Paperless
    *  **Report Data** : Date, Opt-in, Opt-out, Acc. Opt-out.
    *  **DB Used** : PAPERLESS, FIN_ACCOUNT.

|  25303 complete  Supported  25304 incomplete Not Supported 25305 incomplete
Supported alternatively |  
  
  
  * Email Reminder
    *  **Report Data** : Month, of Reminders Sent.
    *  **DB Used** : P_JOB, P_EMAIL_REMINDER.

|  25306 incomplete  Supported  25307 complete Not Supported 25308 incomplete
Supported alternatively | No longer Supported.  
  
  * Update Email Address Report
    *  **Report Data** : CIF, Account Number, E-mail Address, Modified By, Modified Date.
    *  **DB Used** : USR, USR_MAPPING, FIN_ACCOUNT, USR_FIN_ACCOUNT, NOTIFICATION_HISTORY.

|  25309 complete  Supported  25310 incomplete Not Supported 25311 incomplete
Supported alternatively |  
  
  
  * User Login Type Report
    * SSO User Report
      *  **Report Data** : Name, Email Address, Accounts, TIN.
      *  **DB Used** : USR, USR_SESSION, USR_MAPPING, FIN_ACCOUNT, NOTIFICATION_PREFERENCE.
    * DSO User Report
      *  **Report Data** : Name, Email Address, Accounts, TIN.
      *  **DB Used** : USR, USR_SESSION, USR_MAPPING, FIN_ACCOUNT, NOTIFICATION_PREFERENCE.

|  25312 complete  Supported  25313 incomplete Not Supported 25314 incomplete
Supported alternatively |  
  
Email Proofing|  
|

  * Email Notifications Templates:
    * Checking/Savings Statement
    * Account Analysis Statement
    * Loan Payment Due
    * eNotices
    * Welcome
    * Password Update
    * AI User Removal
  * Keywords:
    *  **sdv_txt_userName**
    *  **sdv_txt_acctNum**
    *  **sdv_txt_eNoticeList**
    *  **ADMIN_FULLNAME**

|  25315 complete  Supported  25316 incomplete Not Supported 25317 incomplete
Supported alternatively |  
  
Upload Inserts|  
|

  * Inserts available for: 
    * Checking/Savings Statement (default)
    * Account Analysis Statement (analysis)
    * Loan Payment Due (loan)
    * eNotices (enotice)
  * Can choose one method from the available two methods:
    * Display this insert on the closing date. (Shows the Closing Date)
    * Display this insert within the day range. (Shows the Begin Date, End Date)

|  2733 complete  Supported  2734 incomplete Not Supported 2735 incomplete
Supported alternatively |  
  
Administration|  
|

  * Can change admin user's credentials. 
  * Can create/view/modify/remove other users that have lower privileges.

|  2739 complete  Supported  2740 incomplete Not Supported 2741 incomplete
Supported alternatively |  
  
Exit|  
|

  * Logged off the user

|  2742 complete  Supported  2743 incomplete Not Supported 2744 incomplete
Supported alternatively |  
  
  
  

## Analysis Summary (PUI)

Process and Reports| Prefix| Backend Business| Mismatch with Hypercube
Business| Changes Needed| Note  
---|---|---|---|---|---  
AFP|

  *  **ds2** =default
  *  **ma1** =analysis
  *  **aa1** =analysis
  *  **lb1** =loan
  *  **lb2** =loan

|

#### Handler: AfpStatementData9

  * Each line in the process file must contain 12/13/14/15 fields. 
  * FIelds:  ** _fileName_** _  | _ ** _acctNum_** _  | _ ** _beginDate_** _  | _ ** _closingDate_** _  | _ ** _numOfPages_** _  | _ ** _acctName_** _  | SSN | appType | messageIds | hasCheckStr | insertId | regionCode | crippleFlag | zipFileName_ .
  * If  _crippleFlag_  is present must have a value of either "C" or "R". 

**  **Bold**  indicates all are mandatory fields.

#### Registrar: MessageEStmtRegistrar3

  * autoRegister=false, enableAccountType=false, acctlookup=false, nullDsoTimeStamp=false.
  * Find account from the FIN_ACCOUNT by org_id and acct_num.
    * If account not found create a account and Insert data into the  **FIN_ACCOUNT**  table. As autoRegister is 'false' doesn't create the new user profile.
    * If account found:-
      * Check the  ** _acctName_**  provided by the index file. If it does not match with the account name in the database, update it in the  **FIN_ACCOUNT**  table. 
      * Does not update the account name if the name is either "MEMBER" or "CUSTOMER". 
  * Find paperless from the PAPERLESS2 table by acct_id and atmt_type.
    * If paperless not found:-
      * Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="1", modifiedDate, newStatus="B", oldStatus="N", stmtType.
      * If stmtType is "default" then Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="1", modifiedDate, newStatus="B", oldStatus="N", stmtType="default".
  * Insert statements data into the  **ESTMT_DOC** ,  **ESTMT_FILE** , and  **ARCH_FILE**  tables.
  * As imageMessage is "true" for the default statement.
    * Insert data into the  **ESTMT_MSG_DETAIL**  and  **ESTMT_MSG**  tables.
  * Insert data into the  **P_JOB_ESTMT**  table.

Database Changes: FIN_ACCOUNT, PAPERLESS, ESTMT_DOC, ESTMT_FILE, ARCH_FILE,
ESTMT_MSG_DETAIL, ESTMT_MSG, P_JOB_ESTMT.

|

  

|

  

|  
  
AUTH|  
|

 **Handler** :  **HtbkAuthHandler**

  * Each line in the process file must have 4 fields. 
  * Fields: _  **acctNum  **|  **fullName  **|  **ssn  **|  **cif=ssn  **| dob._

 **  **Bold**  indicates all are mandatory fields.

#### Registrar: HtbkAuthRegistrar

  * Find account from the FIN_ACCOUNT by org_id and acct_num.
    * If account not found create a account and Insert data into the  **FIN_ACCOUNT**  table with org_id, acct_num, acct_name, status="A", lastModified.
  * Find paperless from the PAPERLESS2 table by acct_id and atmt_type.
    * If paperless not found:-
      * Insert data into the  **PAPERLESS**  table with acctId, modifiedBy="0", modifiedDate, newStatus="B", oldStatus="N", stmtType.
  * Find user from the USR_MAPPING table.
    * If the user is not found create a new user and Insert data into the  **USR**  and  **USR_MAPPING**  tables.
    * If the user is found, update the user.
  * Find ufa from the USR_FIN_ACCOUNT and FIN_ACCOUNT tables by user_id and acct_id.
    * If ufa not found create new userFinAccount with usr_id, acct_id, org_id, status="pre_reg" source="DSO" amd Insert data into the  **USR_FIN_ACCOUNT**  table.

Database Changes: FIN_ACCOUNT, PAPERLESS, USR, USR_MAPPING, USR_FIN_ACCOUNT.

|

  

|

  

|  
  
ENOTICE4|

  

|

#### Handler: ENoticeData7

  * Each line in the process file must contain 11 or 12 fields. 
  * First(Record Type) and last(Record Terminator) field must be "L". 
  * Fields:  ** _L_** _  | acctNum | acctType | acctName | afpFileName | type | closingDate | imageCount | postCardFlag | _ ** _zipFileName | L_**  
  * If the account name is not present in the index file, the account number will be set as the account name after masking the first 2 or 4 characters. 
  *  postCardFlag value has to be 0 or 1 or null. 

 **  **Bold**  indicates all are mandatory fields.

#### Registrar: DefaultENotice4Registrar

  * createAccount=false,nullDsoTimeStamp=false.
  * Fin account from the FIN_ACCOUNT table, If account is found
    * Check the  ** _acctName_**  provided by the index file. If it does not match with the account name in the database, update it in the  **FIN_ACCOUNT**  table. 
    * Does not update the account name if the name is either "MEMBER" or "CUSTOMER" or "USER". 
  * If paperless is not found, Insert data into the  **PAPERLESS**  table with stmtType="enotice". 
  * Inserts enotice data in  **ENOTICE**  and  **ARCH_FILE**.
  * Inserts data into the  **P_JOB_ENOTICE**  table. 
  * Inserts data into the  **P_ENOTICE_COUNT**  table. 

Database changes: FIN_ACCOUNT, PAPERLESS, ENOTICE, ARCH_FILE, P_JOB_ENOTICE,
P_ENOTICE_COUNT.

|  
|  
|  
  
CHECK_IMAGE|  
|

#### Handler: DefaultCheckImageHandler3

  * Fields:  _acctNum | acctType | date | amount | number | traceNum | branchNum | tellerID | seqNum |  checkSide.tif_

 **Registrar: CheckImageRegistrar**

Database uses: USR_SESSION, FIN_ACCOUNT, USR_FINACCOUNT, ACCOUNT_CHECK_IMAGE.

|  
|  
|  
  
EMAIL NOTIFICATION|

  * notification.isSendEmailViaAPI=true
  * notification.isEmailManageByEstmt=true

|

#### Handler: NotifyPrefEmailHandler

  * isSelectiveTemplate=false, isSelectiveMailServer=false, isSendEmailViaAPI=true, isEmailManageByEstmt=true, attachmentFeature=false, isSendViaAPI=true.
  * If notifyPref not found update notifyPref with notificationStatus="N", emailStatus="N", emailAttachmentStatus="N", smsStatus="N".
  * Fetch  _emailAddr, acctId, acctNum, name, ciId, esdId,  _If email not null.

Database Uses: FIN_ACCOUNT, USR_FIN_ACCOUNT, NOTIFICATION_PREFERENCE,
PAPERLESS2, USR, USR_SESSION, USR_ACCT_TYPE_MAPPING, P_EMAIL_COUNT.

|  
|  
|  
  
Reports|

  

|

Bounceback Report

  *  **Handler:**   **DefaultBounceBackHandler**
    * Get accountInfo from the  **FIN_ACCOUNT**  and  **NOTIFICATION_HISTORY**  tables by org_id, acct_id, np_id.
    * Get userInfo from the  **USR_MAPPING**  and  **NOTIFICATION_HISTORY**  tables by org_id, usr_id, np_id.

Database Uses: FIN_ACCOUNT, NOTIFICATION_HISTORY, USR_MAPPING.

|  
|  
|  
  
  
  * paperlessReport.stmtType1=default
  * paperlessReport.stmtType2=default,enotice

|

Paperless Report

  *  **Handler:**   **DefaultPaperlessReport2**
    * Get organization from the  **ORGANIZATION**  table by org_uniquename.
    * Get record from the  **FIN_ACCOUNT**  and  **PAPERLESS2**  tables by org_id, acct_id, stmt_type, and p_latest_status.
  *  **Renderer:**   **DefaultPaperlessReportRender**
    * Displays acctNum | paperless status.

Database Uses: ORGANIZATION, FIN_ACCOUNT, PAPERLESS2.

|  
|  
|  
  
  
  * clientPaperlessReport.customize.paperlessStatus={"B": "PRNT", "U": "WWW","E": "WWW", "W": "WBTH"}
  * clientPaperlessReport.notifyClient=true
  * clientPaperlessReport.method=client_pickup

|

Client Paperless Report

  *  **Handler:**   **ClientPaperlessReport2**  

    * Will not save report data to SUMMARY_REPORTS table.
    * As notifyClient is true, it will send email. The email will be sent via PostOffice. 
    * Get records using the  **FIN_ACCOUNT,**   **PAPERLESS2** ,  **USR_MAPPING,**  and  **USR**  tables by org_id and acci_id.

Database Uses: FIN_ACCOUNT, PAPERLESS2, USR_MAPPING, USR.

|  
|  
|  
  
  
  

  


