title: DI SSO
body: # DI SSO

  
  

## Init-params:

All available int-params are given below:

  * EmailUpdate (optional)
  * hasMultipleAcct (optional)
  * hasSecondEmail (optional)
  * hasAcctType (optional)
  * acctLogic (optional)

  
  

## Description:

  *  **EmailUpdate:**  true/false (  **default one is "true"** )  
true : If the email in DB and email from SSO are different than the system
will update the email in DB  
false : The system doesn't update the email in DB.

  *  **hasMultipleAcct:**  true/false (  **default one is "false"** )  
true: It is for many to many model(BANK).  
false: It is for one to one model(CU).

  *  **hasSecondEmail:**  true/false (  **default one is "false"** )  
true: The CID has second/secondary email functionality.  
false: The CID has not second/secondary email functionality.

  *  **hasAcctType:**  true/false (  **default one is "true"** )  
true: Account/s coming from SSO is/are expected to have acctType.  
false: Account/s coming from SSO is/are not expected to have acctType.

  *  **acctLogic:**  add/remove (  **default one is "remove"** )  
By this flag the system will know that the exiting UFA relation/s which is/are
not come from SSO should be removed or kept.

 **add:**  The system won't remove any existing UFA relation if the accounts
are not coming from SSO.

    
    
    Ex. User 1 comes in with account 1,2,3. The system will build those relationship. 
    If the same user comes in again with account 2,3,4. 
    Then the system will add account 4 and not remove account 1.
    

  

**remove:**  The system will remove any existing UFA relation if the accounts
are not coming from SSO. This behavior is the default one.

    
    
    Ex. User 1 comes in with account 1,2,3. The system will build those relationship. 
    If the same user comes in again with account 2,3,4. 
    Then the system will add account 4 and remove account 1.
    

  


