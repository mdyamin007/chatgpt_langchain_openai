title: SSCU - Testing - cURL
body: [1]. To retrieve the secure token:

  * To get the access_token, you'll need to make a POST request to https://&lt;server&gt;:&lt;port&gt;/oauth2/token with the following parameters:
  * To create a token, you must POST to <https://localhost:8090/oauth2/token> with grant_type and scopes values in the data hash.

    
    
    $ curl -k -X POST https://localhost:8090/oauth2/token \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d username=johndoe     \
        -d password=A3ddj3w     \
        -d client_id=s6BhdRkqt3 \
        -d grant_type=password  \
        -d scope=READ_PROFILE%20WRITE_PROFILE
    
    $ curl -k -X POST https://localhost:8090/oauth2/token \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" 
    
    curl -k -X POST https://localhost:8090/api/v1/enrollment \
         -H "Authorization: Bearer UENSUXdudjh3ZHYyTTBzaUhIa21aT1UwUWdTS25zR1UxVk5NU2ozRkdnWEhaSFVrMjBtV2JVa19SQ3QyMUZ0b3JFSXYtZVRfU0RhVl9IbXJiODRDOEE=" \
         -H "Content-Type: application/json" \
         -d '{}'
    

[2]. To retrieve the secure token:

    
    
    $ curl -k -X POST https://10.8.9.57:8090/oauth2/token \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d username=johndoe     \
        -d password=A3ddj3w     \
        -d client_id=s6BhdRkqt3 \
        -d grant_type=password  \
        -d scope=READ_PROFILE%20WRITE_PROFILE
    

[3]. To retrieve the secure token:

    
    
    curl -k -X POST https://10.8.9.57:8090/oauth2/token \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" 
    

  

If everything goes right and the request is successful, you'll receive a 200
response containing a JSON body like this  
Response:

    
    
    {
      "scope":"READ_PROFILE WRITE_PROFILE",
      "expires_in":120000,
      "token_type":"bearer",
      "access_token":"JjM_1brHBfMaYwMaSpnm1A79mjXY8MgZ1QR0YQuyardQlKmAfWUNWJayhL6g94qmwA-Ox97ae6bM6z0AflG2Eg" 
    }
    

  

However, if the response is not successful, you'll receive an error response,
such as this:

    
    
    {
        "error": "invalid_grant",
        "error_description": "Invalid user credentials" 
    }
    

  

**Using the token**  
Using Your Access Token with API V2

tip. Once you have a valid access_token, you can use it to make requests to
API V2. All you need to do is set it in the Authorization header like this:  
Authorization: Bearer {a valid access token}

To use the token, pass it in a header named "Authorization"

    
    
    $ curl -k -X POST https://localhost:8090/api/v1/enrollment \
         -H "Authorization: Bearer X2ZEU0doR2RmVVVwdjlxSWR4ODNIV2JZR25jaHVGQ25ybk9KTUh3Tk94aUZTc3ItTEtnZVJNRi1NYkszek5kWU03eHBDUXJtZjVWU3IxUGxhTXhBSVFIbXJiODRDOEE=" \
         -H "Content-Type: application/json" \
         -d '{ "accountNumber" : "12813", "clientId" : "InfoIMAGE", "customAttribs" : { "emailId" : "","flagInd1" : "C", "flagLevel1" : "M", "flagNum1" : "69",  "flagType1" : "C", "reasonNum1" : "",  "suffix" : "", "surname" : "CH"  }, "enrollment" : "P"}'
    

  

    
    
    $ curl -k -X POST https://localhost:8090/api/v1/enrollment \
     -u "access_token: VXH1rQ5aFjlOyC7k2qRH6oI7JznFkt0TZkctRiUbLiIUpUZembNGRQkgAlqM0YXxUzpzI7Iy6q2x2IrC_cNdVA" \
     -H "Content-Type: application/json" \
         -d '{ "accountNumber" : "12813", "clientId" : "InfoIMAGE", "customAttribs" : { "emailId" : "","flagInd1" : "C", "flagLevel1" : "M", "flagNum1" : "69",  "flagType1" : "C", "reasonNum1" : "",  "suffix" : "", "surname" : "CH"  }, "enrollment" : "P"}'
    

[4]. Sample request to post the null payload. The REST API will return the
error.  
GET

    
    
    curl -k https://10.8.9.57:8090/api/v1/enrollment/help?access_token=SYnqA0EJIqJpqVeCG5rcPV1jZMsTqc_cwtNjv6DqppguwgCG6Y3I36F-jbiI4SBGzbOiD3ppAkie2LLTsoHxUQ
    

  

[5]. Sample JSON Request to post the data:

    
    
    $ curl -k -X POST https://10.8.9.57:8090/api/v1/enrollment?access_token=mjZA_ZROTBcNgosntDKWMsCz6BSi6gNn_GBt09j_w_C0zooU-SBKiSvBkNF_Eg4HOsfQ0cq_RPdlv5bX4O5Ckg \
     -H "Content-Type: application/json" \
         -d '{ "accountNumber" : "12813", "clientId" : "InfoIMAGE", "customAttribs" : { "emailId" : "","flagInd1" : "C", "flagLevel1" : "M", "flagNum1" : "69",  "flagType1" : "C", "reasonNum1" : "",  "suffix" : "", "surname" : "CH"  }, "enrollment" : "P"}'
    

  

[6] Sample JSON Request to post the data: Wrong Surname

    
    
    curl -k -X POST https://localhost:8090/api/v1/enrollment?access_token=cPv7ZH-TiXI2C__AuUObMbZ6ojK3QACQXz6aZzD4S2XqqBqYfvA198mGLHgooqQs0QouTkUtCJ5VWFFIFfiIqA \
     -H "Content-Type: application/json" \
         -d '{ "accountNumber" : "12813", "clientId" : "InfoIMAGE", "customAttribs" : { "emailId" : "","flagInd1" : "C", "flagLevel1" : "M", "flagNum1" : "69",  "flagType1" : "C", "reasonNum1" : "",  "suffix" : "", "surname" : "KH"  }, "enrollment" : "P"}'
    

$echo -n "_fDSGhGdfUUpv9qIdx83HWbYGnchuFCnrnOJMHwNOxiFSsr-LKgeRMF-
MbK3zNdYM7xpCQrmf5VSr1PlaMxAIQHmrb84C8A" | openssl enc -base64

    
    
    curl --user name:password http://www.example.com
    --dump-header headers_and_cookies 
    curl --cert mycert.pem https://secure.example.com
    curl --data "<xml>" --header "Content-Type: text/xml" 
    

POST  
Content-Type= application/x-www-form-urlencoded  
username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE

    
    
    {
      "scope": "READ_PROFILE WRITE_PROFILE",
      "expires_in": 120000,
      "token_type": "bearer",
      "access_token": "3Fx_icAwJc-vvNkOMiEEyYpb6tD6L1El-6ZvceMRZiYEar8fJs6J6bkeAZXz8_Tn6tuaB3kGGY65Nnq63uwSTA" 
    }
    

  

<https://localhost:8090/oauth2/token>  
[https://localhost:8090/oauth2/token?username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE](https://localhost:8090/oauth2/token?username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE)

    
    
    $ curl -k -X POST -d "username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" https://10.8.8.202:8090/oauth2/token --header "Content-Type:application/x-www-form-urlencoded" 
    curl -k -X POST -H "Authorization: Basic czZCaGRSa3F0MzpBM2RkajN3" -d "username=johndoe&password=A3ddj3w&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" https://10.8.8.202:8090/oauth2/token --header "Content-Type:application/x-www-form-urlencoded;charset=UTF-8" 
    where czZCaGRSa3F0MzpBM2RkajN3 = <client_id>:<password>= s6BhdRkqt3:A3ddj3w 
    
    
    
    $ curl -k -X POST -H "Authorization: Bearer czZCaGRSa3F0MzpBM2RkajN3" -d "username=johndoe&password=A3ddj3w&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" https://10.8.8.202:8090/oauth2/token --header "Content-Type:application/x-www-form-urlencoded;charset=UTF-8" 
    

My SQL Scripts to give access privilege to the MULE user:

    
    
    GRANT ALL PRIVILEGES ON *.* TO 'MULE'@'localhost' IDENTIFIED BY 'SantaCruzHighway@17' WITH GRANT OPTION;
    GRANT ALL PRIVILEGES ON *.* TO 'MULE'@'localhost' IDENTIFIED BY 'MyTestHighway@84' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
    

* * *

  
[Edit this
section](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL/edit?section=2)

## SOAP/XML Response from
PathWays[](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL#SOAPXML-Response-from-PathWays)

    
    
    <S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
       <S:Body>
          <ns2:submitXMLCommandResponse xmlns:ns2="urn:connections.spectrum.summitsite.com">
             <submitXMLCommandResponse>
    <![CDATA[<Summit xmlns="http://summit.fiserv.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Spectrum><CommandRs>
    <ResponseHeader><Status><StatusCode>00</StatusCode><StatusDesc>SUCCESSFUL</StatusDesc></Status></ResponseHeader>
    <FDINRs><Account>10639</Account><Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>25</FlagNum><Description>MONTHLY STATEMENT</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>53</FlagNum><Description>PRD/DD</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>55</FlagNum><Description>CALL-24</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>64</FlagNum><Description>PERFECT CENTS</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>69</FlagNum><Description>E-STATEMENTS</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>71</FlagNum><Description>STMT PRINT SUPPRESS</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>88</FlagNum><Description>MY DEPOSIT ELIGIBLE</Description></Results>
    </FDINRs></CommandRs></Spectrum></Summit>]]>
    </submitXMLCommandResponse>
          </ns2:submitXMLCommandResponse>
       </S:Body>
    </S:Envelope>
    
    
    
    <S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
       <S:Body>
          <ns2:submitXMLCommandResponse xmlns:ns2="urn:connections.spectrum.summitsite.com">
             <submitXMLCommandResponse>
    <![CDATA[<Summit xmlns="http://summit.fiserv.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Spectrum><CommandRs><ResponseHeader>
    <Status><StatusCode>00</StatusCode><StatusDesc>SUCCESSFUL</StatusDesc></Status></ResponseHeader>
    <FDINRs><Account>10837</Account><Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>25</FlagNum><Description>MONTHLY STATEMENT</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>53</FlagNum><Description>PRD/DD</Description></Results><Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>55</FlagNum><Description>CALL-24</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>58</FlagNum><Description>ON-LINE BANKING</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>69</FlagNum><Description>E-STATEMENTS</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>71</FlagNum><Description>STMT PRINT SUPPRESS</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>78</FlagNum><Description>VISA DEBIT CARD</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>88</FlagNum><Description>MY DEPOSIT ELIGIBLE</Description></Results>
    <Results><FlagLevelAndSuffix>M00</FlagLevelAndSuffix><FlagType>C</FlagType><FlagNum>89</FlagNum><Description>MY DEPOSIT ENROLLED</Description></Results>
    </FDINRs></CommandRs></Spectrum></Summit>]]>
    </submitXMLCommandResponse>
          </ns2:submitXMLCommandResponse>
       </S:Body>
    </S:Envelope>
    

  
[Edit this
section](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL/edit?section=3)

## JSON Response (Negative
testing)[](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL#JSON-Response-Negative-testing)

<warning>  
Given below JSON response describes various return messages for missing or
incomplete mandatory input fields like account number, flag etc.  
</warning>

    
    
    {
      "message": "enrollment value too long!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "flagInd1 invalid!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : , \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "accountNumber value too long!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 1096645454444, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "enrollment value too long!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P2, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "surname length <>2!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : NUL, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "suffix value too long!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 001, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "flagInd1 invalid!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : K, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    {
      "message": "flagInd1 invalid!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : K2, \"flagLevel1\" : M, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "flagLevel1 field length<>1!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M2, \"flagType1\" : C, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    {
      "message": "flagType1 field length<>1!",
      "data": "{\"clientId\" : abc, \"accountNumber\" : 10966, \"enrollment\" :P, \"customAttribs\" : {\"suffix\" : 00, \"surname\" : VI, \"flagInd1\" : C, \"flagLevel1\" : M, \"flagType1\" : C1, \"flagNum1\" : 69, \"reasonNum1\" : , \"emailId\" :null} }",
      "httpStatus": 400
    }
    
    

* * *

  
[Edit this
section](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL/edit?section=4)

## For Reference
Purpose[](https://i3dev.easyredmine.com/projects/integration/wiki/SSCU_-
_Testing_-_cURL#For-Reference-Purpose)

 **HTTP Request to retrieve the Secure Token**

<http://localhost:8090/instant/token>

    
    
    POST
    Content-Type=application/x-www-form-urlencoded
    client_id=s6BhdRkqt3&client_secret=7Fjfp0ZBr1KtDRbnfVdmIw&username=johndoe&password=A3ddj3w&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    or
    username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE     
    

=====CURL=========

    
    
    curl -k -X POST -d "username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" https://10.8.8.202:8090/oauth2/token --header "Content-Type:application/x-www-form-urlencoded" 
    curl -k -X POST -H "Authorization: Basic czZCaGRSa3F0MzpBM2RkajN3" -d "username=johndoe&password=A3ddj3w&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE" https://10.8.8.202:8090/oauth2/token --header "Content-Type:application/x-www-form-urlencoded;charset=UTF-8" 
    where czZCaGRSa3F0MzpBM2RkajN3 = <client_id>:<password>= s6BhdRkqt3:A3ddj3w 
    

  

Note: Testing - all given below data set is working in order to fetch the
Secure Token

    
    
    username=johndoe&password=A3ddj3w&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    username=user953&password=nDeRaS2Zer&client_id=s6BhdRkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    
    username=user953&password=nDeRaS2Zer&client_id=QW5kZXJht3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    username=user953&password=nDeRaS2Zer&client_id=bmFvcAkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    username=user933&password=anPoS3Zopo&client_id=bmFvcAkqt3&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    
    username=user953&password=nDeRaS2Zer&client_id=c3NjdQlUdF&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    username=user933&password=anPoS3Zopo&client_id=c3NjdQlUdF&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    username=user913&password=cupRS4Zono&client_id=c3NjdQlUdF&grant_type=password&scope=READ_PROFILE%20WRITE_PROFILE
    

**Database SQL Query to check the InfoDB status**

    
    
    SELECT * from (select fa.acct_number, fa.acct_id, ci.ci_id, fa.org_id, fa.acct_owner_name, ci.ci_email_addr, p.p_old_status, p.p_new_status, p.stmt_type 
    from fin_account fa, usr_fin_account ufa, usr u, contact_info ci, paperless p 
    where fa.org_id=getorgid('sscu') and fa.acct_number='7778019'
    and fa.acct_id=p.acct_id and p.stmt_type='deault' and fa.acct_id=ufa.acct_id 
    and ufa.usr_id=u.usr_id and u.ci_id=ci.ci_id order by p.p_modified_date desc) where rownum=1;
    
    select * from USR_FIN_ACCOUNT where acct_id = 19077464
    select * from usr_FIN_ACCOUNT where ufa_id = 65128637
    select * from USR where usr_id =15942225
    
    select * from contact_info order by ci_id desc
    
    SELECT * from USR_SESSION where org_id=9452 AND usr_id=15942225
    select * from FIN_ACCOUNT where ACCT_ID = '19077464'
    select * from FIN_ACCOUNT where org_id = 9452 and ACCT_NUMBER = 7778019
    select * from PAPERLESS  where acct_id = 19077464
    
    ------------------------------------------------------------------------
    select * from FIN_ACCOUNT where org_id = 9452 and ACCT_NUMBER = 7778020
    
    select * from PAPERLESS  where acct_id = 19079064
    --delete from PAPERLESS  where acct_id = 19077571
    --delete from PAPERLESS  where p_id =55463651
    
    select * from USR_FIN_ACCOUNT where acct_id = 19079064
    --delete from USR_FIN_ACCOUNT where acct_id = 19077571
    
    select * from FIN_ACCOUNT where org_id = 9452 and ACCT_NUMBER = 7778020
    --delete from FIN_ACCOUNT where org_id = 9452 and ACCT_NUMBER = 7778020
    
    SELECT * from USR_SESSION where org_id=9452 AND usr_id=15943525
    --delete from USR_SESSION where org_id=9452 AND usr_id=15942333
    
    select * from USR where usr_id =15942333
    --delete from USR where usr_id =15942333
    
    select * from contact_info order by ci_id desc    
    --delete from contact_info where ci_id = 1303822
    


