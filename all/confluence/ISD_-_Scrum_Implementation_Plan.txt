title: ISD - Scrum Implementation Plan
body: # Values

* * *

  *  **Commitment**
  *  **Courage**
  *  **Focus**
  *  **Openness**
  *  **Respect**

# Preamble

* * *

Imagine that the Development Team is a team of shippers who are in charge of
delivering cargoes across a river. Each of the cargo has a deadline date
stamped on the container. So the primary goal of the Development Team is to
deliver the cargoes to the other side of the river on or before the deadline
dates. Currently, each of the members of the Development Team is provided with
their own rowboat, and each is assigned a set of cargoes they must deliver
across the river by a specified due date. The expectation is that everyone
will be able to row their assigned cargoes across the river, and the team will
not have any cargo left over on the starting riverbank.

What happens when a shipper is unable to ship a piece of cargo across the
river? Another shipper must be assigned to take over. If the piece of cargo is
still sitting on the starting bank, that's one additional piece of cargo that
the new shipper must deliver across the river. The shipper may not have enough
time to do such. This represents the situation where a Developer is unable to
start a project that was assigned. And what if the cargo was in the progress
of being delivered? The rowboat is in the middle of the river. The newly
assigned shipper must now swim across the river in order to get to the rowboat
before they can continue to move the cargo again. This represent the overhead
cost of reassigning Developer mid-project when secondary research must be done
for the Developer to catch up to the project's current status.

The Scrum framework re-imagine this setup. Instead of each Developer having
their own rowboat, the Scrum Team rows a single flagship. The team makes a
commitment at the start of the Sprint on exactly how much cargo the team will
deliver across the river per trip, and ensures that all cargoes will be
delivered by the end of the Sprint. If a Developer is unable to row, all the
cargoes are on a single ship, and the rest of the team can keep rowing. It is,
then, self-evident, that such a setup is more preferable than the current
state of the ISD development cycle and workflow.

# Objectives (Acceptance Criteria)

* * *

  1. Agility
    1. Work is DONE by the end of Sprint.
    2. If Work cannot be DONE by the end of Sprint, this is recognized and determined early, so that all affected parties become aware as soon as possible.
    3. Resource can be shifted and enabled for Work with little to no overhead. 
  2. Flow
    1. Developers should be enabled to enter Flow more often due to less distractions.
  3.  Quality
    1. As a result of increased Flow, Quality of Work is improved.
    2. Less errors leading to a direct correlation with less Bugs found during Support.
  4. Smaller and Refined Product Increment
    1. The Scrum Team should strive to release the smallest possible increment that does not have any dependencies.
      1. Example 1: If a project requires an update to the afp index files, ISD can always release this first together with Print without having to bundle the change with another update such as Hypercube Migration. 
    2. If a feature is not a client-specific custom feature, the feature should be developed first before being offered to the client.
      1. Example 1: ASFC MFA DSO. ISD should have develop the MFA for Prism first. This is a cost the organization have to be willing to pay to improve the Product before offering the feature to the client. That way, when ISD "set up MFA" for the client, it will be a smaller unit of work, and there is less cause for delay. 
  5. Cost Effectiveness
    1. The cost of any Work is two weeks worth of capital and resource. If by the end of two weeks, during Sprint Review, the Scrum Team or the stakeholders determine the Work to be insufficient / inadequate, the organization would have lost only two weeks worth of resources.
    2. The Scrum team should develop the ability to identify the exact Work that is needed to be done, and recognize when a client's request is out of scope.
  6. Transparency
    1. What is being worked on and what is not being worked on is clear to the Scrum Team and to the stakeholders.
    2. The Development Team's capacity is known, and everyone is aware that request for Work not planned in the Sprint will most likely result in a trade-off on progress for Work that is planned for the Sprint.
  7. Teamwork and Team Morale
    1. The team will function better as a unit, and overall morale is improved.
    2. An increase in Flow Work would also boost individual happiness.
  8. Team Ownership of Product
    1. Everyone on the team has an expert understanding of the Product.
    2. Working to move the Product towards the next Increment does not have any dependency, such as on other Teams. 
  9. One Product Owner Per Product
    1. There should only be one Product Owner making decisions on any given Product. This is to reduce delay in decision making, when multiple Product Owners must consult each other to make any decision.
    2. The organization should respect the Product Owner's choice regarding the direction of the Product. 
  10. Avoiding Waterfall-Agile Chimera
    1. Actively avoid working between Waterfall and Agile. 
  11. Continuous Refinement
    1. The Scrum framework was founded on empiricism. The Scrum Team accepts that any implementation will not be perfect and strives to improve with each iteration (Sprint).
  12. Proof of Concept
    1. The ISD Scrum Team's effective implementation will be used a POC for an asserted effort on the organization-level to adopt Agile in its entirety. 
    2. The Scrum Master will gain the experience to act as a resource on implementation strategy for the organization. Though, an Agile Coach should be acquired to advise on adoption by the organization.

# Long Term Objectives

* * *

  1. Organization-wide adoption of Agile in its entirety
    1. Or we could focus on helping the Implementation team adopt Scrum first.
  2. Identify and implement ways to reduce dependencies on other departments. This could be a result of (1). Development / enhancement of internal tools. 
  3. Implement technical QA (Verification). Our current QA team is only handling Validation.
    1. Unit testing
    2. Regression testing

# Roles

* * *

## Product Owner

  * Determines what need to be done (maintain the Product Backlog)
  * Eliminates obstacles that prevent the Development Team from getting work done
  * BA must go through Product Owner for anything non-standard

## Development Team

  * Determines when and how work will be done (generate the Sprint Backlog)

## Scrum Master

  * Helps the team implement Scrum successfully
  * Can be part of the Development Team

# Events

* * *

Sprint length will last 2 weeks (10 days). Most, if not all, work should be
done by the end of Day 9. All events are time-boxed, and should not go on
longer than the allotted time.

### Day 1: Sprint Planning (9:15 a.m. - 11:15 a.m.)

The Development Team determines the work to be done for the next two weeks.

  * Align everyone on the team with what the Development Team are going to accomplish in the next two weeks.
  * Everyone is on the same page on what needs to be done.
  * Everyone understands the state of the current Product and how the Scrum Team are moving the Product to the next Increment.
  * Tasks for Day 1 are assigned after planning is complete.

### Day 2-9: Daily Scrum (9:15 a.m. - 9:30 a.m.)

  * What was done yesterday, what is going to be worked on today, and what is blocked (why).
  * Solutions to blocked items will be discussed in impromptu meetings after Daily Scrum.
  * Allows us to identify any anomaly that would prevent us from finishing all the scheduled work.
  * Presence of the Product Owner is preferable, but not required.

### Day 10: Sprint Review (2:00 p.m. - 4:00 p.m.)

  * Development Team presents what had been done (demo) to stakeholders.
  * Product Owner invites the relevant Stakeholders (Implementation, AC, possibly clients also).
    1. For long-term projects, it is ideal to demo what have been done to the client for feedback, so that if there is something the client doesn't like, the Development Team will be aware sooner and can make the correction during development. In the case that what the Development Team are doing don't actually meet the client's specs at all, only two weeks worth of resources will be lost as opposed to something like six weeks worth.  

      1. When the clients are involved in Sprint Reviews, it may help them be more understandable towards longer project lead time if such is necessary.
    2. This should reduce the need to have constant meetings with Implementation / AC. Start of Sprint, they will know what the Development Team will be working on with the expectation that all of those work will be finished by the end of the Sprint. At the end of the Sprint, the Development Team will show what were done and what were not done (and why).
    3. Who gets invited can change on an as-needed basis per sprint review.
  * If deemed necessary, the Scrum Team performs Backlog refinement after Demo.

### Day 10: Sprint Retrospective (4:30 p.m. - 6:00 p.m.)

  * Scrum Team meets to review what went well and what did not.
  * Discuss and decide on what improvements can be made in the next Sprint.
  * Revisit any improvements suggested in the previous Sprint and discuss whether those improvements worked, or if tweaks are needed.

# Types of Work

* * *

## Development

  * Generated by client's request through the Implementation or AC teams.
  * These go into the Product Backlog.
  * Work generated by AC always go into the Product Backlog and never into the Sprint.
    1.  **TBD  **Is it possible for projects that fit within one Sprint to have no timeline provided to the client? The organization can guarantee that it will be done within two weeks, barring any complications, but the organization should not guarantee which two weeks it will be. The client will be informed when the project has started with the understanding that the project will be complete at the end of the Sprint.

## Support

  * The Technical Support Engineer(s) will handle a majority of the Support.
  * A Developer will be assigned, per Sprint on a rotation, to be responsible for any Support that cannot be resolved by the Technical Support Engineer(s).
    1. These Support are to be worked on on the day following assignment. For example, if on Day 2, the Developer is assigned three Support tickets, the Developer will continue to work on the Work taken on by the Developer for Day 2 during the Daily Scrum. On Day 3, during Daily Scrum, the Developer will be assigned the Support tickets that came in during Day 2.  
  * The Scrum Team will allot a specific amount of hours ( **TBD** ) that will be spent towards Support each Sprint. Once that number is reached, any non-urgent issue will have to wait till the following Sprint.
  * Any development work that results from Support will go into the Product Backlog. The work can go straight into the Sprint Backlog on a case-by-case basis.
  * EVERY request to ISD must be a Support ticket. There should no longer be any direct emails or messages through Sparks.

## Bug

  * Critical: The entire Development Team should halts work for the Sprint and focus on the Bug until it is resolved.
  * Non-critical: The Product Owner decides whether the Bug can wait till next Sprint to be resolved.  

## Internal

  * Work must be scheduled into the Product Backlog.
  * Time must be allotted each Sprint towards Internal Work in order for the Development Team to make any progress. 
    1. Development Time is a fixed asset. There is no "Work on it when there is free time." It is either "Will work on it" or "Will not work on it."

# Artifacts

* * *

## Product Backlog

  * A backlog of all the Work the Product Owner decides should be done on the Product(s).

## Sprint Backlog

  * During Sprint planning, tasks are created based on the items in the Product Backlog that the Development Team have decided to work on for the Sprint.
  * Tasks are not assigned at the beginning of the Sprint. Each task is assigned daily during the Daily Scrum.
  * Tasks are only transitioned during Daily Scrum with the expectation that they are either moved towards DONE or an intermediary DONE status or into Blocked.
    1. Tasks that are expected to take more than one day can remain in its column without being flagged as an anomaly.
  * Once the Sprint starts, no new JIRA ticket will be created into the Sprint Backlog without the Development Team's approval.

### Jira Scrumboard

#### Workflow

To Do| Design| Design Done| Development| Development Done| Test| Test Done|
Blocked| QA Done| Done  
---|---|---|---|---|---|---|---|---|---  
  
Project Initiated

Waiting for JEF

Unable to Start

|  
|  
|  
|  
|  
|  
|

Waiting for Feedback

Waiting for QA

Waiting for Approval

|  
|

Done  
  
  * Intermediary Done statuses are introduced for a pull system instead of push. The Development decide when to move to the next stage instead of having the status automatically pushed to the next stage.
  * Instead of a JEF Cancelled status, the item will be moved to the Product Backlog for backlog refinement later.

### Physical Scrumboard

  *  ~~A physical scrumboard is to be maintained.~~  Deferred until after the Shelter-in-Place order has been lifted and all members can work in the office.
  * Tasks are represented by individual Post-It notes.

## Increment

"The Increment is the sum of all the Product Backlog items completed during a
Sprint and the value of the increments of all previous Sprints. At the end of
a Sprint, the new Increment must be DONE, which means it must be in useable
condition and meet the Scrum Team's definition of DONE. An increment is a body
of inspectable, done work that supports empiricism at the end of the Sprint.
The increment is a step toward a vision or goal. The increment must be in
useable condition regardless of whether the Product Owner decides to release
it."

# Definition of DONE

* * *

 **This is really important that the Scrum Team should take time to define.**

#  Supplementary Actions to Be Taken During the Initial Stages of Adoption

* * *

 **Education**

  1. The Scrum Team need to educate the clients and other departments on what is Scrum and why ISD are doing it.
    1. The Product Owner will leverage their position and relationship with the other departments as part of this education effort.
    2. The focus should be on the people who ISD work and interact with. Departments with some level of separation such as PC would not be as important, though they should still be made aware.
  2. At the start of implementation, it is likely that there will be a drop in productivity. However, in the long run, it should see a significant increase.
  3. There is a real need for all deliverables to be turned over by the start of the Sprint. There should not be any obstacle for the Development Team to get Work DONE.
  4. Once the Sprint starts, that is all the work the Development Team is going to do; nothing else. The Scrum Team have allotted time for Support, and will not go beyond that time.
    1. If our attention is drawn away by any urgent item, it is most likely that another project must be delayed. This is an implicit understanding, but with Scrum, it must be made explicit.
    2. Typically, the Scrum Team aim to get all Work DONE by the end of the Sprint. However, when it is not possible to get all Work DONE, an informed decision to delay a piece of Work is made early and all relevant parties will be made aware sooner. 
  5.  It is really important that other departments try their best to learn how to use all our internal tools effectively, and be able to recognize independently common issues. There should be as little distraction as possible to getting Work in the Sprint Backlog DONE. 
    1. In return, ISD should develop / improve the tools so that they are more explicit about the point of failure, so that the user can determine whether it is something they can fix or something that they would need to ask for Support.
    2. Every request needs to be a Support ticket. No exception.

# Sources

* * *

Schwaber, Ken, and Jeff Sutherland. "Official Scrum Guide."  _Scrum.Org_ ,
Attribution Share-Alike license of Creative Commons, 2018,
[www.scrumguides.org/scrum-guide.html](http://www.scrumguides.org/scrum-
guide.html).


