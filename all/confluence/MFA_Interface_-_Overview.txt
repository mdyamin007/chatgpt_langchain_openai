title: MFA Interface - Overview
body:   * **Table of contents**
  * 1\. Introduction
    *       * 1.1. Multi-factor Authentication
      * 1.2. Advantage of Two-step verification
      * 1.3. Existing User Authentication Techniques
      * 1.4. Mobile Token Convenience
    * 2\. MFA Requirements
    * 3\. Mule-ESB - MFA Implementation
      *         * Footnote:

  
  

## 1\. Introduction

eStatement web-application is in a process of implementing the two-
factor/multi-factor authentication (MFA) process as a part of the higher level
of authentication assurance and security.

Multi-Factor Authentication (MFA) provides an extra level of security that can
be applied to authenticate process. Also, known as Two-factor authentication
(2FA), which adds a layer of protection to the standard password method of
online identification.

With MFA enabled, when a user signs in to the website, it will prompted for
the user-id/password (the first factor - what they know), as well as for an
authentication code from their MFA device (the second factor - what they
have). Taken together, these multiple factors will provide increased level of
security for the eStatement account settings and resources.  
  

  

### 1.1. Multi-factor Authentication

As its name implies, it's the use of two or more different authentication
factors to verify the identity of the user. Two-factor authentication is the
best known implementation, involving exactly two factors. The classic example
of two-factor authentication is the ATM card and PIN number combination. It
uses "something you have" (the card) and "something you know" (the PIN
number). It's important to note that the factors used must be independent from
one another to be considered "true" multi-factor authentication.

Two Factor authentication can be achieved using a combination of the following
factors:

  1. Something you know - password or PIN  
 One-factor authentication - this is "something a user knows." The most
recognized type of one-factor authentication method is the password.

  2. Something you have - token or smart card (two-factor authentication)  
 Two-factor authentication - in addition to the first factor, the second
factor is "something a user has." Examples of something a user has like key-
fob [footnote] that generates a pre-determined code, a signed digital
certificate or even a biometric such as a fingerprint. The most recognized
form of two-factor authentication is the ubiquitous RSA SecurID fob.

  3. Something you are - biometrics, such as a fingerprint (three-factor authentication)

  

Because multi-factor authentication security requires multiple means of
identification at login, it is widely recognized as the most secure software
authentication method for authenticating access to data and applications.  
  

  

### 1.2. Advantage of Two-step verification

Two-step verification helps protect a user's account from unauthorized access
should someone manage to obtain their password. Even if a password is cracked,
guessed, or otherwise stolen, an attacker can't sign in without access to the
user's verification codes, which only the user can obtain via their own mobile
phone.

Two-factor authentication is the most practical protection available for
online banking and other Web transactions. The number of big-name services
supporting two-factor authentication continues to grow: Google, Facebook,
Yahoo, PayPal, LastPass, and Dropbox are among the sites that let you require
two-factor authentication to sign in to your account from unverified computers
and devices.  
  

  

### 1.3. Existing User Authentication Techniques

The broad categories of user authentication, their methods and properties are
shown in the following table

Method| Examples| Properties  
---|---|---  
What you know| User Ids, PINs Passwords| Shared, Easy to guess, Usually
forgotten  
What you have| Cards, Badges, Keys| Shared, Can be Duplicated, Lost or Stolen  
What you know and what you have| ATM + PIN| Shared, PIN is weak (written on
back, easy to guess or forget)  
Something unique about user| Fingerprint, face, voiceprint| Not possible to
share, Repudiation unlikely, Forging difficult, Cannot be lost or stolen  
  
  
  

### 1.4. Mobile Token Convenience

The key advantage of the mobile token is that there are no new devices or
wallet-fillers for customers - just an add-on to the device they already carry
everywhere. Since customers already own the "hardware" (the mobile phone), it
can be used for the MFA process without any additional cost to user.

* * *

  
  

## 2\. MFA Requirements

  1. Physical Device - Cell phone  
 A mobile phone that can receive the verification code via text message or
phone call. Here, cell-phone will be used for the MFA purpose.

  2. Login Process by Web-application  
 During the login process to web-site, when user enter the account user-
id/password, it will validate the credentials as a part of the first-level
authentication.  
 Afterwards, web-application, will prompt user to supply a cell-phone number
to which the verification-code (security token) can be delivered for second-
level (MFA) authentication purpose.  
 User can choose from option (SMS or Email) to receive the verification-code
(security token) via SMS text message or email.  
 Optionally, whenever web-application detects that user sign in from an
"untrusted computer or device" (i.e. no cookies found), it may trigger MFA
process by asking for the cell-phone verification-code (security token).

  3. MFA Verification-code (AKA security token, 6-digit code via SMS)  
 When user signs in to the web-site, it will ask for the username and
password as usual.  
 After user-id/pwd validation, it will prompt for the MFA verification code
(use-case scenarios - first time login or login from a new browser or device).
The user can generate & receive the verification code thru SMS or Email.  
 User then prompted with a second page (or modal dialog-box) to enter a
verification-code (i.e. security token).  
 The web-site may provide "Remember Me" check-box to remember the
computer/device for future use. Also, web-site may have a logic to ask for the
MFA verification code, once every 30 days per browser or after deleting their
browser's cookies.  
 **Note:**  Users should not check "Remember verification", if they're at a
public or shared computer.

  4. Verification Code (security token) Validity Period  
 Depending on how user opted to receive the verification-code (security
token), it will have  _ **time-based**_ , MFA authentication from the web-
application. User can enter the verification-code (security token) within
1-hour to successfully sign in, otherwise token will expire and it will be no
longer to use.  
 The verification-code (security token) will be valid for the 1-hr duration
in order to avoid fraud/misuse.

  5. Login with security token  
 After user received and enter the code to the web-site, it will take the
user to the next screen of the sign-up process in order to display the result.  
 The web-site may ask the user to designate the computer you're using as
trusted (or Remember Me) in order to store the cookies for future use.

* * *

  
  

## 3\. Mule-ESB - MFA Implementation

  * MFA will use an authentication device (i.e. cell phone), that will receive system generated random, six-digit, single-use authentication/verification code (security token).
  * Alternatively, verification code (security-token) can be received by the email as well (SMS or email, not via both channel parallely).
  * The verification code will be used to authenticate the user as a part of the two-step MFA process.
  * The web-site will prompt for the MFA verification code, when a user signs in to a website.
    * First, it will ask for the username/password (in case browser session closed & restarted) as a part of the first factor authentication (i.e. what they know). In case browser session is still open, it will show/prompt for the verification code (keeping in view of first step already done).
    * Second step for MFA - asking for the authentication code from their MFA device (the second factor - what they have).

  
  

#### Footnote:

tip.  **Key fob**  A key fob is a type of security token: a small hardware
device with built-in authentication mechanisms. Just as the keys held on an
ordinary real-world key chain or fob control access to the owner's home or
car, the mechanisms in the key fob control access to network services and
information. The key fob (and similar devices, such as smart cards) provide
two-factor authentication: the user has a personal identification number
(PIN), which authenticates them as the device's owner; after the user
correctly enters their PIN, the device displays a number which allows them to
log on to the network. Because a key fob is a physical object, it is easy for
the owner to know if it has been stolen. In comparison, a password can be
stolen (or guessed) and used for an extended period before -- if ever -- the
theft is detected.

* * *

 **Resources:**

<http://en.wikipedia.org/wiki/Multi-factor_authentication>  
<http://en.wikipedia.org/wiki/Two-factor_authentication>  
<http://en.wikipedia.org/wiki/Security_token>  
<http://www.staysafeonline.org/>


