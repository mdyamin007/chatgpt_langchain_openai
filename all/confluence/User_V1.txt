title: User V1
body: ### **POST /v1/user/{cid}/**

 **Description :** Creates a user.

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
userJson| JSON| NA| NA| Take acctNum  
primaryUsrFlag| QueryParam| NA| ignore,require,create| Take acctType  
netTellerFlag| QueryParam| NA| Y,N| Take acctSubType  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/createUser_post_2)

 **Swagger looks Like** :

**Functionality** :

Create a user if the user does not already exist yet. User creation api
inserts data into 4 tables (usr,audit_log_cid, usr_session, usr_mapping).
There is some logical performance based on the given param value which is
explained in the flowchart.

 **Flowchart** :

###  **GET /v1/user/{cid}/**

 **Description :** Get User

 **Request Type** : GET

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
extUserId| QueryParam| NA| NA| Take acctNum  
loginType| QueryParam| NA| ignore,require,create| Take acctType  
accountExpiryDays| QueryParam| NA| Y,N| Take acctSubType  
selectivePaperless| QueryParam| NA| application, selective| Take
selectivePaperless  
searchByVendorUsrId| QueryParam| NA| Y/N| Take searchByVendorUsrId  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/getUser_get_2)

 **Swagger looks Like** :

  

**Functionality** :

Get the user information and also others information which is related to this
user. Get user endpoint fetches data from total 8 tables(organization, usr,
usr_mapping, usr_session, notification_preferance, usr_fin_account,
fin_account,restriction) based on the given params. All logical performance is
shown in the below flowchart.

 **Flowchart** :

  

  

###  **DELETE /v1/user/{cid}/**

 **Description :** Delete a user

 **Request Type** : DELETE

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
extUserId| QueryParam| NA| NA| Take acctNum  
modifiedBy| QueryParam| NA| ignore,require,create| Take acctType  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/removeUser_delete_3)

 **Swagger looks Like** :

**Functionality** :

Delete User API makes soft delete according to the given params. 6 tables
(usr,ogranization,usr_mapping,usr_session,papperless, audit_log_cid) are
associated with this API but update only two tables (usr_session and
audit_log_cid) where usr_session's "sess_active_status" column is set with
"inactive" and audit_log table contains the API call information.

 **Flowchart** :

  

  

###  **GET /v1/user/account/**

 **Description :** Delete a user

 **Request Type** : GET

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctId| QueryParam| NA| NA| Take acctId  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/addUserAccount_post_11)

 **Swagger looks Like** :

**Functionality** :

Get Users by account Id API gets all users that are associated with the given
account Id. This Api reads data from 7 tables (usr_mapping, usr, organization,
usr_fin_account, usr_acct_type_mapping,usr_session, restriction) based on some
logics. All logics are shown in the below flowchart.

 **Flowchart** :

  

###  **GET /v1/user/{cid}/loginId**

 **Description :** Check uniqueness of login id

 **Request Type** : GET

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
loginId| QueryParam| NA| NA| Take loginId  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/getUserLoginId_get_10)

 **Swagger looks Like** :

**Functionality** :

Check uniqueness of login id API check the existence of loginId of a user.
This API reads data from two tables (organization, usr_mapping). All logical
operations are shown in the below flowchart.

 **Flowchart** :

  

###  **POST /v1/user/account/SendEmail/{cid}**

 **Description :** Check uniqueness of login id.

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
RealTimeNotification| JSON| NA| NA| Take RealTimeNotification  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/sendEmail_post_0)

 **Swagger looks Like** :

**Functionality** :

This API uses notify service to send the email. There is no communication with
the infoService database. Below flowchart shows the clear picture of this API
call.

 **Flowchart** :

###  **POST /v1/user/{cid}/account/verifyEmail**

 **Description :** verify an email address

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctNums| QueryParam| NA| NA| Take acctNums  
npIds| QueryParam| NA| NA| Take npIds  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/verifyEmail_post_14)

 **Swagger looks Like** :

  

**Functionality** :

This endpoint updates the status of email in notification_preference table.
All logical operations are shown in the following flowchart.

 **Flowchart** :

  

###  **POST /v1/user/account/verifySMS**

 **Description :** verify an sms.

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctNums| QueryParam| NA| NA| Take acctNums.  
npIds| QueryParam| NA| NA| Take npIds.  
code| QueryParam| NA| NA| Take code.  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/verifySMS_post_6)

 **Swagger looks Like** :

  

**Functionality** :

This endpoint updates the status of sms_is_valid column of
notification_preference table. All logical operations are shown in the
following flowchart.

 **Flowchart** :

  

###  **POST /v1/user/{cid}/login**

 **Description :** login authentication

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
loginId| QueryParam| NA| NA| Take loginId.  
password| QueryParam| NA| NA| Take password.  
meta| JSON| NA| NA| Take JSON.  
selectivePaperless| QueryParam| NA| NA| Take selectivePaperless  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/login_auth_post_15)

 **Swagger looks Like** :

**Functionality** :

This endpoint is used for dso login. This endpoint reads data from 9 tables
(organization, usr, usr_mapping, usr_session, fin_account, usr_fin_account,
notification_preference, paperless2, restriction, usr_acct_type_mapping). All
logical operations are showed in the following flowchart.

 **Flowchart** :

###  **GET /v1/user/{cid}/search**

 **Description :** Search users

 **Request Type** : GET

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
extUserId| QueryParam| NA| NA| Take extUserId.  
loginType| QueryParam| NA| NA| Take loginType.  
accountExpiryDays| QueryParam| NA| NA| Take accountExpiryDays.  
selectivePaperless| QueryParam| NA| NA| Take selectivePaperless  
searchByVendorUsrId| QueryParam| NA| Y/N| Take searchByVendorUsrId  
searchExactMatch| QueryParam| NA| Y/N| Take searchExactMatch  
  
 **Swagger URL (Pilot)** : [Click
Here](http://localhost:8080/infoservice/#!/userV1/searchUser_get_14)

 **Swagger looks Like** :

**Functionality** :

This endpoint is used for searching users. This endpoint reads data from 4
tables (organization, usr, usr_mapping, usr_session). All logical operations
are shown in the following flowchart.

 **Flowchart** :

###  **PUT /v1/user/**

 **Description :** Updates a user corresponding to the USERID and passed in
parameter updateFields which is a json of changed fields

 **Request Type** : PUT

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
npLinkType| QueryParam| NA| NA| Take npLinkType.  
core| QueryParam| NA| NA| Take core.  
user| String| NA| NA| Take user.  
selectivePaperless| QueryParam| NA| NA| Take selectivePaperless  
vendorId| QueryParam| NA| Y/N| Take vendorId  
  
 **Swagger URL (Pilot)** : [Click
Here](http://localhost:8080/infoservice/#!/userV1/updateUser_put_16)

 **Swagger looks Like** :

**Functionality** :

I will write about it later. Basically I do not understand many things about
this endpoint. All logical operations are shown in the following flowchart.

 **Flowchart** :

###  **POST /v1/user/*/{cid}/account/validate**

 **Description :** Validate user account mapping

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
meta| JSON| NA| NA| Take json.  
checkNpRecord| QueryParam| NA| NA| Take checkNpRecord.  
selectivePaperless| String| NA| NA| Take selectivePaperless.  
  
 **Swagger URL (Pilot)** : [Click Here](http://pd-
pilot1.infoimageinc.com:8580/infoservice/#!/userV1/validateUserAccount_post_8)

 **Swagger looks Like** :

**Functionality** :

This endpoint is used for account validation checks. This endpoint reads data
from 10 tables (organization, fin_account, usr_mapping, usr,
user_fin_account,user_acct_type_mapping, notification_preference, usr_session,
paperless2, restriction). All logical operations are shown in the following
flowchart.

 **Flowchart** :

###  **GET /v1/user/account/**

 **Description :** Fetches a user corresponding to the account ID

 **Request Type** : GET

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctId| JSON| NA| NA| Take acctId.  
  
 **Swagger URL (Pilot)** : [Click
Here](http://localhost:8080/infoservice/#!/userV1/getAccountUsers_get_7)

 **Swagger looks Like** :

  

**Functionality** :

This endpoint gets all the users which are related to the given account Id.
This endpoint reads data from 7 tables (usr_mapping, usr, organization,
usr_fin_account, usr_acct_type_mapping, usr_session, restriction). All logical
operations are shown in the following flowchart.

 **Flowchart** :

###  **PUT /v1/user/{cid}/account/enrollment**

 **Description :** Fetches a user corresponding to the account ID

 **Request Type** : PUT

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctNums| JSON| NA| NA| Take acctNums.  
npLinkType| QueryParam| NA| NA| Take npLinkType.  
cif| QueryParam| NA| NA| Take cif.  
usrAutoCreate| QueryParam| NA| NA| Take usrAutoCreate.  
acctAutoCreate| QueryParam| NA| NA| Take acctAutoCreate.  
acctLookup| QueryParam| NA| NA| Take acctLookup.  
updateHoldStatus| QueryParam| NA| NA| Take updateHoldStatus.  
checkPrimaryUser| QueryParam| NA| NA| Take checkPrimaryUser.  
primaryUser| QueryParam| NA| NA| Take primaryUser.  
removeUFA| QueryParam| NA| NA| Take removeUFA.  
selectivePaperless| QueryParam| NA| NA| Take selectivePaperless.  
captureAcctDesc| QueryParam| false| NA| Take captureAcctDesc.  
  
 **Swagger URL (Pilot)** : [Click
Here](http://localhost:8080/infoservice/#!/userV1/enrollment_put_16)

 **Swagger looks Like** :

**Functionality** :

This endpoint enrolls accounts with a user. All logical operations are shown
in the following flowchart.

 **Flowchart** :

###  **POST /v1/user/{cid}/account**

 **Description :** Adds/links Account for the corresponding user and Account
Info.The user can optionaly add notification preference right at the time of
creation.

 **Request Type** : POST

 **Params** :

ParamName| ParamType| Default Value| Possibly Value| Description  
---|---|---|---|---  
cid| PathParam| NA| demo| Take cid name as pathParam.  
acctNums| JSON| NA| NA| Take acctNums.  
npLinkType| QueryParam| NA| NA| Take npLinkType.  
cif| QueryParam| NA| NA| Take cif.  
usrAutoCreate| QueryParam| NA| NA| Take usrAutoCreate.  
acctAutoCreate| QueryParam| NA| NA| Take acctAutoCreate.  
acctLookup| QueryParam| NA| NA| Take acctLookup.  
updateHoldStatus| QueryParam| NA| NA| Take updateHoldStatus.  
checkPrimaryUser| QueryParam| NA| NA| Take checkPrimaryUser.  
primaryUser| QueryParam| NA| NA| Take primaryUser.  
removeUFA| QueryParam| NA| NA| Take removeUFA.  
selectivePaperless| QueryParam| NA| NA| Take selectivePaperless.  
captureAcctDesc| QueryParam| false| NA| Take captureAcctDesc.  
  
 **Swagger URL (Pilot)** : [Click
Here](http://localhost:8080/infoservice/#!/userV1/addUserAccount_post_6)

 **Swagger looks Like** :

**Functionality** :

This endpoint linkes users and accounts. All logical operations are shown in
the following flowchart.

 **Flowchart** :


