title: BBBB Hypercube Migration Analysis
body:   

Document Status|

In Progress  
  
---|---  
Document Owner|

  
  
# Baker Boyer Bank

3

##  **ROOT**

  
|  
  
---|---  
 **Client Name**|  Baker Boyer Bank  
 **Schema**|  Default  
 **Login Method**|

  * net-teller  

    * hblogin.jsp

  
 **Enrollment Step**|

Based on SSO date

  * 2 Steps

  
 **Welcome Email**|  No  
 **Menu**|

  * View Statements
  * View Disclosure
  * Profile
  * Exit

  
 **Account Types**|

U, I, NA, D, M, T, A, B, N, O, S, L  
  
 **Statement Types**|

  * default  (eStatements)
  * heloc (eStatements)
  * enotice (eNotices)
  * escrow (Escrow Statements) 
  * etax (for only admin site)

  
 **Archival Period**|

  * default: 84
  * heloc: 84
  * escrow: 84
  * enotice: 84 (starts with 1st day of the month)
  * etax: 84 (for only admin site)

  
 **Paperless Configuration**|  by selective  
 **Delivery Preference**|

  * Paperless (E)
  * Paper (B)

  
 **Notification Preference**|  Email  
 **NP Link Type**|  byUser  
 **Batch Download  **| No  
 **DSO login**|  No  
 **User-Account Relation**|  Many to Many  
 **Note**|

  
  
  
  

###  **Database Migration**

 **USR_SESSION** : !usr_id is used as sess_login_id. So no migration is
needed.

 **USR_MAPPING** : Data is inserted into usr_mapping table. So no migration is
needed.

 **NOTIFICATION_PREFERENCE** : Data is not inserted into
notification_preference table. So, migration is needed.

###  **SSO**

###  **net-teller**

  *  ** **uniqueId.jsp:****  

    * Fields : NetTellerID, CashManagementID, Provider_name = InfoIMAGE7144TEST
    * Takes NetTellerID, CashManagementID and Provider_name as input.
    * Then UniqueId is created.
      * If CashManagementID is empty or null, uniqueId = netTellerId + "|" \+ providerName.
      * Otherwise, uniqueId = netTellerId + "|" \+ cashManagementId + "|" \+ providerName.
    * Then data is generated by hashing UniqueId.
  *  **connectionString.jsp:**  

    * Fields: UniqueID, FI_number = 7144, DateTimeValue = 0202201, sharedSecretKey = 772fedaea8f2b6a488bde9cb65ed0d90
    * Takes  UniqueID, FI_number, FI_number and sharedSecretKey as input.
    * hbvalue is created where hbvalue = uniqueID+dateTimeValue+fI_Number.
    * Then  data is generated by hashing hbvalue with sharedSecretKey as password.

  *  ** **sso exchange:  **hblogin.jsp**
    * Fields : UniqueID, ConnectionString, FI_number = 7144, DateTimeValue = 02022017  
    * Takes uniqueId, connectionString, FI_number and DateTimeValue as input.
    * Creates hbvalue by concatenating uniqueId, dateTimeValue and fI_number. 
    * Then hbvalue is hashed with sharedKey as password which comes from web-xml.

    * If hashed value matches connectionString, it redirects to /include/signon_inc.jsp page otherwise redirects to error page.
    *  **signon_inc.jsp:**
      * In signon_inc.jsp page, it checks for SSO Date.
      * If SSO Date is found, then home.jsp is redirected. Otherwise, it redirects to enrollment.

###  **Enrollment (SSO)**

  * The user goes through the enrollment based on the following condition:
    1. If the user never logged in via SSO i.e. the SSO date is null,  then goes through the 2 steps of enrollment.
  *  **Enrollment Step 1:  **

 **                     **1. **** Click here -> Opens in a new window and
shows full terms and condition.

                      2\. Email Address.

                      3\. Confirm E-mail address.

                      4.  Disagree button -> Logoff from site.

                      5\. Agree button ->  Enrollment step 2.  **    **

       

  * **Enrollment Step 2:**

 **                  **1\. Shows the list of the associated accounts.

                   2\. All account will be updated to electronic.

                   3\. Cancel button -> Logoff from site.

                   4\. Continue button ->  Enrollment Complete page.

       

**Enrollment complete page:**

 **                 **1\. User is already enrolled and can view the menu.

                  2\. This page auto redirect to Profile after 5 seconds.

                  3\. Email gets inserted in contact_info table.

       

  

###  **Menu Tabs**

  *  ** **View Statements****
    * Shows eStatements and eNotice tab in side.
    * eTax is not supported in root part even though it is supported in MSM
    * Only default type statements are shown under eStatements tab.
    * Archival period is 84 months for all statements and notices.
    * Shows dropdown menu for all accounts.
    * Archives eNotices of last 4 months.

                   

  *  ** **View Disclosure****
    * Opens in new tab.
    * Shows PDF.

           

  * ****Profile****
    * Can view all accounts' number.
    * Only shows delivery preference for default and heloc type statements and enotices. Other wise, shows "This account is Unknown".
    * Can  update delivery preference for individual accounts which are not unknown.
    * CANNOT update Notification Preference (email to sms).
    * 1 email address for all concurrent accounts.
    * Update -> Can update email address
    * Select All-> All Concurrent account will be selected to have electronic statements.
    * Can view Status for all accounts. 
    * email gets updated in contact_info table.

             

  *     *  **Viewable Status:**
      * There is an option for updating viewable status for each account number.
      * If status is chosen as not viewable, then delivery preference is changed from electronic to paper for each statements and notices for that account which have paperless2 table entry. 
      * Also if status in not viewable, then these account number are not shown inside dropdown menu of View Statement page. 

                                                   

  

  *     *       * For multiple users of an account, if any of the user's **SESS_ACTIVE_STATUS** is 'active' and  viewable status is 'Y' or null in **USR_FIN_ACCOUNT** table then rolling back to paper will not occur with  viewable status change.   
Example: We have two users: User 1 and User 2. Both have account  136077-
Deposit account. In both users, this account is active and it's viewable
status is 'Y'. Now,

  *     *       *         * If we change the viewable status of the account in user 2 from viewable to not viewable, rollback of the statements into paper will not happen. Because, the other account is active and it's viewable status is 'Y.

                                                                                                                                                                                 

  

  *     *       *         * Now, viewable status of User 2 is 'N'. Now, if we change the viewable status of User 1, all statements which are in electronic will roll back to paper. 

                                                                                                                                                         

  

  

  *  **Viewable feature in hypercube:**

  1.     * A client can avail this feature if it's cid is configured in **server-configs** restriction.enabled.client flag and notVieable flag in **infoconfig** is true.
    * Then a 'Not Viewable' checkbox will appear on each delivery preference account details in profile page. In eStatement page, a message will be shown in place of statements.

                                                                                  

  1.     * Difference between bbbb prism and hypecube in viewable feature:

                                         

                       bbbb Prism|                                Hypercube  
---|---  
  
  1. Uses **Viewable  **column of USR_FIN_ACCOUNT table.

|

  1. Uses RESTRICTION table.

  
  2\. Has logic for multiple users of an account. |    2\. Doesn't have logic
for multiple users of an account.  
  3.  Updates PAPERLESS2 table.|   3\. Does not update PAPERLESS2 table.  
  
                                                                                                 

  *  ** **Exit****
    * Logs out off the site.

  

* * *

  

##  **MSM**

MSM has the following features:

  * Account Management

  * Account Creation
  * E-mail Proofing

  * E-mail Reminder
  * Upload Inserts
  * Marketing Promo Email
  * Reports
  * Administration

  * Exit

### Account Management

  * Can search by account number and email address.

             

  * Those applications which have Cutomer name as 'N/A':
    * Can view history of paperless status (eStatements, eNotice).
    * Can update delivery preference and notification preference.
    * Cannot update email address.
    * Can view eStatement, eNotice, eTax (eTax is not supported in ROOT).
  * Those applications which have Cutomer name that is not 'N/A':
    * Can view history of paperless status (eStatements, eNotice).
    * Can update delivery preference but not notification preference.
    * Can update email address.
    * Can view eStatement, eNotice, eTax (eTax is not supported in ROOT).

                                   

  * Shows archived eNotices of last 84 months.

           

  * By checking the checkbox and submitting, we can assign statements/notices to the right application type manually.  
  *  **Linking and Assigning Application Type Manually:**
    * Statement can be assigned to any application that match the account number queried for.
    * After selecting application type and submitting, statement is assigned to the new application type by updating ESTMT_DOC table.

           

### Account Creation

  *  **Step 1 Account Creation:**
    * Fill out the necessary deatails: 
      * Neteller ID, Cash Management ID (Optional), First Name, Last Name, Email Address, Officer Code, Business Account (check box).
      * If Business Account is checked, Last name is optional.

           

  * **Step 2 Add Accounts:**
    * Select application type from dropdown and give an account number.
    * Account number cannot have a leading zero.
    * 7 application types are available in dropdown:  T <Time Deposits Accounts>, S <Savings Account>,  D <Deposit Account>,  B <Safe Deposit Box>, A <Accounts Payable>,  O <Overdraft Protection>,  L <Loans>.
    * Can add multiple accounts.
    * Clicking Finish let's you enter into the next step.

           

  

  * **Step 3 Account Creation - Confirmation Request:**
    * For verifying if all the information are correct.
    * Clicking Change takes you to step 1.
    * Clicking Submit takes you to next step.

           

  * **Step 4 Account Creation Summary Page:**
    * Shows all the information and associated accounts.
    * 'Click here' shows full version of terms and conditions in a new tab.

           

### E-mail Proofing

  * Statement types: eStatements, OD Protection, Annual Escrow Analysis, eNotices, Reminder.

### E-mail Reminder

### Upload Inserts

  * Supports eStatements, OD Protection, Annual Escrow Analysis.
  * Only PDFs can be uploaded.
  * If inserted within day range, date should be after today's date. Begin and End date cannot be same.

### Marketing Promo Email

  * Available options are : Pricing Information
  * Clicking 'Pricing Information' opens a new tab and shows terms and conditions.
  *  **Marketing Promotion Email Order:  **
  * Select email recipients:
  * All eStatemet Users -> Email will be sent to all the eStatement Members in InfoIMAGE's database regardless of the paperless status.
  * Partial List -> Email will be sent to all the email addresses listed in the ECL file provided by you.
  * Clicking 'Continue' sends approval or sample.

### Reports

  * Available reports:
    * Latest Stats
    * User Login Activity
    * AI Login Activity 
    * E-mail Address Collection
    * Paperless 
    * Registered Users
    * Non Registered Status
    * Email Reminder
    * Account Creation Report
    * Customer Enrollment Report

### Administration

  * Admin can create, modify and delete another admin user with a lower permission level.

### Exit

  * Terminates session.

  

* * *

  

##  **Processing UI**

### BACKEND PROCESSES

BBBB has 5 processes,

  1. AUTH
  2. AUTH2
  3. DOC
  4. INSERT_RANGE
  5. ETAX

### AUTH Process

#### Flags:

auth.grouping = false

auth.netteler.providerName = InfoIMAGE7144

#### Handler: BBBBAuthHandler2

####  **Registrar: BBBBAuthRegistrar**

####  **Index File format:** netTeller ssn firstName lastName acctNum appType
acctFullName acctStatus pseudoName

####  **Validation:**

  * netTeller should not be empty.
  * ssn must contain numbers only.
  * ssn must be in 4 chars long.
  * firstName should not be empty.
  * acctNum must contain numbers only.
  * appType should be valid.
  * acctStatus should be valid.

 **Logic for deciding active and closed user:**

  *  **A  **for active user and  **C  **  for closed user.
  * If appType is D/S and acctStatus is 2/8, it's Closed account.
  * If appType is L/O/T and acctStatus is 2, it's Closed account.
  * For any other combination, it's Active account.

####  **Processing Steps:**  

  * If user is null, checks for active user. If it is active user then it creates new user. If closed, does nothing.
  * If old user, searches ssn. If new ssn found in index file, it updates the usr table.
  * If new user, then CIF is attached to user in usr_mapping table.
  * Creates login for new users as hashed value of cif (netTellerId+"|") + "|" \+ providerName and then inserts entry in usr_session if new user.
  * Fin_account table is updated for both active and closed user.
  * If active user and there is no entry for the account in paperless, paperless table is updated as:
    *  If acctType is 'O', then both enotice and heloc paperless entry is inserted by setting p_latest_status = 'B' .
    *  If acctType is 'D'/'S', then both enotice and default paperless entry is inserted by setting p_latest_status = 'B' .
    *  If acctType is 'A'/'B'/'L'/'T', then only enotice paperless entry is inserted by setting p_latest_status = 'B' .
  * For active user, if pseudoname is present, then usr_account_type_making is updated for existing entry or new entry is inserted. Else entry is removed if uat is not null.
  * For active user, if ufa is found, then it is removed from ufaMap. Else entry is inserted into usr_fin_account. (ufaMap is list of ufa where sourceType is not null and sourceType!="CM").
  * Then cif is removed from cifSet. (cifSet is the set of cif_num where sourceType is null).
  * postProcess:
    * Process leftover data in ufaMap:
      *  If account is not enrolled, then paperless status is changed from 'E' to 'B' for statements of that account.
      * Then the account is unlinked from usr_fin_account and usr_acct_type_mapping.
      * Then user is deleted from usr_session and also usr_mapping entry is deleted.
    * unlink expired closed account:
      * Closed accounts are unlinked from usr_fin_account and usr_acct_type_mapping.

### AUTH2 Process

#### Flags:

auth2.grouping = false

auth2.netteler.providerName = InfoIMAGE7144

#### Handler: BBBBCMAuthHandler

####  **Registrar: BBBBCMAuthRegistrar**

####  **Index File format:** netTeller cashManagement ssn firstName lastName
acctNum appType acctFullName acctStatus pseudoName

####  **Validation:**

  * netTeller should not be empty.
  * ssn must contain numbers only.
  * ssn must be in 4 chars long.
  * firstName should not be empty.
  * acctNum must contain numbers only.
  * appType should be valid.
  * acctStatus should be valid.

 **Logic for deciding active and closed user:**

  *  **A  **for active user and  **C  **  for closed user.
  * If appType is D/S and acctStatus is 2/8, it's Closed account.
  * If appType is L/O/T and acctStatus is 2, it's Closed account.
  * For any other combination, it's Active account.

####  **Processing Steps:**  

  * If user is null, checks for active user. If it is active user then it creates new user. If closed, does nothing.
  * If old user, searches ssn. If new ssn found in index file, it updates the usr table.
  * If new user, then CIF is attached to user in usr_mapping table.
  * Creates login for new users as hashed value of cif (netTellerId+"|"+cashManagement) + "|" \+ providerName and then inserts entry in usr_session if new user..
  * Fin_account table is updated for both active and closed user.
  * If active user and there is no entry for the account in paperless, paperless table is updated as:
    *  If acctType is 'O', then both enotice and heloc paperless entry is inserted by setting p_latest_status = 'B' .
    *  If acctType is 'D'/'S', then both enotice and default paperless entry is inserted by setting p_latest_status = 'B' .
    *  If acctType is 'A'/'B'/'L'/'T', then only enotice paperless entry is inserted by setting p_latest_status = 'B' .
  * For active user, if pseudoname is present, then usr_account_type_making is updated for existing entry or new entry is inserted. Else entry is removed if uat is not null.
  * For active user, if ufa is found, then it is removed from ufaMap. Else entry is inserted into usr_fin_account. (ufaMap is list of ufa where sourceType is not null and sourceType="CM").
  * Then cif is removed from cifSet. (cifSet is the set of cif_num where sourceType="CM").
  * postProcess:
    * Process leftover data in ufaMap:
      *  If account is not enrolled, then paperless status is changed from 'E' to 'B' for statements of that account.
      * Then the account is unlinked from usr_fin_account and usr_acct_type_mapping.
      * Then user is deleted from usr_session and also usr_mapping entry is deleted.
    * unlink expired closed account:
      * Closed accounts are unlinked from usr_fin_account and usr_acct_type_mapping.

#### Doc Process

####  **Flags:**

global.multipleStmtType=false  
global.multipleDocType=false  
global.enableAccountType=true  
global.autoRegister=false  
global.stmtType.list=default

global.ms1=default  
global.me1=heloc  
global.ds1=default  
global.ys1=escrow  
global.dla=enotice

global.default.desc=Monthly Statements  
global.heloc.desc=Heloc Statements  
global.marketing1.desc=Marketing Promo Email  
global.enotice.desc=E-Notices  
global.escrow.desc=Escrow Analysis

global.ssoKey=bbbb

doc.default.automatedEmailNotification=true  
doc.heloc.automatedEmailNotification=true  
doc.escrow.automatedEmailNotification=true  
doc.enotice.automatedEmailNotification=true

afp.automatedEmailNotification=true

afp.default.estmtselinsert=true

#### Handler: DataHandler

####  **Registrar: AfpRegistrar(default, heloc, escrow),
EnoticeRegistrar(enotice)**

####  **Processing Steps:**  

  * Find fin account number.
  * If account is not found it creates fin account.
  * If account is found, updates the acctOwnerName.
  * No user creation, cause autoregister is false.
  * Insert data into paperlss table.
  * Data is inserted into:
    * estmt_doc, estmt_file, arch_file,p_job_estmt and estmt_sel_insert table for (default, heloc and escrow).
    * enotice, arch_file, p_job_enotice table for enotice.
  * Register email notification.

### INSERT Process

#### Handler: RangeInsertHandler

####  **Registrar: InsertRegistrar**

 **Processing step:**

  * Insert into insert_info table.

### ETAX Process

####  **Flags:**

global.enableAccountType=true

global.tax=etax  
global.etax.desc=E-Tax

etax.compression=false  
etax.createAccount=true  
etax.isZipped=true  
etax.copyZipBuffer=32768  
etax.isSharingAfps=true

etax.automatedEmailNotification=false  
global.etax.blockEmail=true

#### Handler: ETaxData3

####  **Registrar:  **ETaxRegistrar3

####  **Processing Steps:**  

  * Find fin account number.
  * If account is not found it creates fin account.
  * No user creation cause autoregister is false.
  * Insert data into paperlss table.
  * Insert data into etax, arch_file and p_job_etax table.
  * Register email notification.

### Backend Reports

  1.  **Accounting Report:**

  *     *  **Handler:** BbbbReport
    * It generates several reports:
    *  **Afp Report:  **Fetch data from p_job and p_estmt_count table and display that p_job related information such as Date, Description, count, success, warning, failed count etc.

sqlAfp Report Querytrue

  

  *   

    *  **Email notification report:** Pulls data from p_job searching by name="email" and status="1" i.e. success. Displays description and other information about this job.

sqlEmail Notification Report Querytrue

  

  *  
    *  **Reminder email notification report:  **Pulls data from p_job and p_job_email searching by name="email" and stmt_type like "reminder%. Displays report i.e. job number, description, success, warning, failed count.

sqlReminder Email Notification Report Querytrue

  

  *  
    *  **ENotice Report:**  Pulls data from p_job searching by name="enotice" and status="1" i.e. success. Displays information about this job.

sqlEnotice Report Querytrue

  

  *  
    *  **ENotice email notification report:  **Pulls data from p_job searching by name="email" and status="1" i.e. success. Displays description and other information about this job.

sqlEnotice Email Notification Report Querytrue

  

  *   

    *  **Auth bank report:**  Pulls data from p_job searching by name="auth_bank" and displays information about the job i.e. number of accounts processed, success, warning, failed.

sqlAuth Bank Report Querytrue

  

  *  
    *  **Marketing promo email notification report:**  Pulls data from p_job, p_job_email table searching by stmtType="marketing1" and status=1. 

sqlMarketing Promo Email Notification Report Querytrue

  

  *  
    *  **Inserts report:**  Pulls data from p_job searching by name="insert" and displays the information about a job.

sqlInserts Report Querytrue

  

  *  
    *  **Estmt_active users report:**  Pulls data from ACTIVE_USER_REPORT table. Displays number of sso users, dso users and active users.

sqlEstmt_active Users Report Querytrue

  

  *  
    *  **Accounting report:**  Pulls data from p_job and p_job_email.
      * Total number of reminder email, promotion email and welcome emails are displayed.

       2.  **Active Users Report:**

  *     *  **Handler:  **BBBBReportHandler
    * This report displays the number of active users. Also insert data into ACTIVE_USER_REPORT table.

sqlActive Users Report Querytrue

  

       3.  **Alt Name Report:**

  *     *  **Handler:  **BbbbAltNameReport
    * This report pulls acct_number, type, co_owner_name from fin_account table and displays co_owner_name along with acct_number, and type in the report.

sqlAlt Name Report Querytrue

       4.  **Paperless Report:**

  *     *  **Handler:  **BbbbPaperlessReport
    * Pulls acct_number, type, p_new_status, p_modified_date and p_modified_by from fin_account and paperless table and displays in report.

sqlPaperless Report Querytrue

* * *

## Analysis Summary (ROOT)

Scope| Feature| BBBB Business| Hypercube| Note  
---|---|---|---|---  
  
 **Enrollment(SSO)**

|  net-teller|

  * UniqueId.jsp
  * ConnectionString.jsp
  * hblogin.jsp

|  25 complete  Supported  26 incomplete Not Supported 27 incomplete Supported
alternatively |  
  
User enrollment|

If the user never logged in via SSO, So the SSO date is null  then goes
through the 2 steps of enrollment

|  28 complete  Supported  29 incomplete Not Supported 30 incomplete Supported
alternatively |  
  
Enrollment Step 1| Shows terms and condition and takes email input.|  31
incomplete  Supported  32 incomplete Not Supported 33 complete Supported
alternatively | It will be split into two steps.  
Enrollment Step 2|

Shows associated account list with account number, account description and
pseudo-name. Doesn't show any delivery preference.

|  34 incomplete  Supported  35 incomplete Not Supported 36 complete Supported
alternatively |

It will show delivery preferences but user will not have any option to choose.
Delivery preference will be electronic for all.  
  
 **Statements**|  View Statements|

Views statements and notices of selected account.

|  37 complete  Supported  38 incomplete Not Supported 39 incomplete Supported
alternatively |  
  
  
Archived eNotices

| Archives notices of last four months including current month of selected
account.|  40 incomplete  Supported  41 incomplete Not Supported 42 complete
Supported alternatively | Notices are shown in yearly tabs.  
 **Profile**|

Delivery preference change

  

|

  * If delivery preference is paperless then the user can't change it. But if it is in Paper then the user can change it to paperless.

|  88 complete  Supported  89 incomplete Not Supported 90 incomplete Supported
alternatively | Disable paper feature in Hypercube.  
Email address update|  
|  91 complete  Supported  92 incomplete Not Supported 93 incomplete Supported
alternatively |  
  
Change all delivery preference to electronic|

  * there will be a button on profile page to change all the paperless status to electronic.   
  

|  94 complete  Supported  95 incomplete Not Supported 96 incomplete Supported
alternatively |

Turn on this "allPaperlessChangable" flag.  
  
Viewable Status|

  * User can change account's **Viewable status by account**. If viewable status is changed to **Not Viewable** for a account, then that account's paperless status is changed to **Paper.** And that account can not be seen in  account number drop-down. Sets **N** in usr_fin_account's viewable column. 

|  43 incomplete  Supported  44 complete Not Supported 45 incomplete Supported
alternatively | Need to verify. Need to look into account.notViewable
funtionality.  
  
  * After that, if Viewable Status is changed to **Viewable** again, this does not change the account's paperless status, it remains in **Paper**. ** ** And it still can not be seen in account number drop-down. Because drop-down shows only those accounts which have at least one statement in electronic. Sets **Y** in usr_fin_account's viewable column. 

|  97 incomplete  Supported  98 complete Not Supported 99 incomplete Supported
alternatively | Need to verify. Need to look into account.notViewable
funtionality.  
 **Disclosure**|  
|

  * Shows disclosure page in new tab.

|  46 complete  Supported  47 incomplete Not Supported 48 incomplete Supported
alternatively  |  
  
  
  

## Analysis Summary (MSM)

Scope| Feature| BBBB Business| InfoTRAC| Note  
---|---|---|---|---  
 **Account Management**|

Account Management

|

  * Search by Account Number
  * Search by E-mail Address

|  100 complete  Supported  101 incomplete Not Supported 102 incomplete
Supported alternatively  |  
  
  
  * Admin can edit the email address for registered user.

|  2721 complete  Supported  2722 incomplete Not Supported 2723 incomplete
Supported alternatively |  
  
  
  * Admin can not edit the email address for unregistered user.

|  103 complete  Supported  104 incomplete Not Supported 105 incomplete
Supported alternatively |  
  
  
  * Admin can update the delivery preference for registered user.

|  106 complete  Supported  107 incomplete Not Supported 108 incomplete
Supported alternatively |  
  
  
  * Admin can not update the delivery preference for unregistered user.

|  109 complete  Supported  110 incomplete Not Supported 111 incomplete
Supported alternatively |  
  
  
  * Admin can change account's **Viewable status by account**. If viewable status is changed to **Not Viewable** for a account, then that account's paperless status is changed to **Paper.** Sets **N** in usr_fin_account's viewable column. 

|  112 incomplete  Supported  113 complete Not Supported 114 incomplete
Supported alternatively |  
  
  
  * After that, if Viewable Status is changed to **Viewable** again, this does not change the account's paperless status, it remains in **Paper**. ** ** And it still can not be seen in account number drop-down. Because drop-down shows only those accounts which have at least one statement in electronic. Sets **Y** in usr_fin_account's viewable column. 

|  115 incomplete  Supported  116 complete Not Supported 117 incomplete
Supported alternatively |  
  
**Account Creation**|  Create User|

  * Creates user using the following values:
    * netTeller Id*
    * cahManagement Id
    * First Name*
    * Last Name*
    * Email Address*
    * Officer Code*
    * Business Account (check box)

Note: If business account is checked, then last name is optional.

|  118 incomplete  Supported  119 incomplete Not Supported 120 complete
Supported alternatively | Infrotrac does not support optional last name and
email address.  
 **Email Proofing**|  
|

Email are supported for the following statement types:

  * default (eStatements)
  * heloc (OD Protection)
  * escrow (Annual Escrow Analysis)
  * enotice (eNotices)
  * reminder1 (Reminder)

|  121 complete  Supported  122 incomplete Not Supported 123 incomplete
Supported alternatively | Reminder option will no longer be supported.  
 **Upload Inserts**|  
|  Insert Management |  124 complete  Supported  125 incomplete Not Supported
126 incomplete Supported alternatively |  
  
**Reports**|  
|

  *  **Latest Stats:  **This report shows the current month's statistics for the Number of Statements Viewed/Unviewed, Number of Notifications Sent/Failed, and Number of Email Reminders Sent.

|  25282 complete  Supported  25283 incomplete Not Supported 25284 incomplete
Supported alternatively |  
  
  
  * **User Login Activity:  **This report shows how many users have logged into eStatements during a specified time range, as well as showing peak periods of user activity.

|  25285 complete  Supported  25286 incomplete Not Supported 25287 incomplete
Supported alternatively |  
  
  
  * **AI Login Activity:  **This report shows how many authorized administrator users (such as Account Service) have logged into the AI (Administrative Interface) site.

|  25288 complete  Supported  25289 incomplete Not Supported 25290 incomplete
Supported alternatively |  
  
  
  * **Email Address Collection:** This report lists all registered eStatement users, as well as their CIF Number, login Name and email addresses.

|  136 complete Supported  137 incomplete Not Supported 138 incomplete
Supported alternatively |  
  
  
  * **Paperless:  **This report shows which users (and how many) have elected to opt out of receiving paper statements. 

|  25306 complete  Supported  25307 incomplete Not Supported 25308 incomplete
Supported alternatively |  
  
  
  * **Registered Users:  **This report shows the number of users who have signed up for eStatement each month, as well as a cumulative list of registered users. 

|  139 complete Supported  140 incomplete Not Supported 141 incomplete
Supported alternatively |  
  
  
  * **Non-Registered Status:** This report will provide a list of account numbers that are not registered but currently elect paperless. It includes  those accounts which are not linked with any registered user but paperless status is 'E'.

|  142 incomplete Supported  143 complete Not Supported 144 incomplete
Supported alternatively |  
  
  
  * **Email Reminder:** This report shows the number of email reminders that were sent each month. 

|  154 incomplete Supported  155 complete Not Supported 156 incomplete
Supported alternatively |  
  
  
  * **Account Creation Report:  **This report shows the admin user that created a login using the Account Creation feature.

|  157 complete Supported  158 incomplete Not Supported 159 incomplete
Supported alternatively |  
  
  
  * **Customer Enrollment Report:  **This report list all the active NetTeller ID and if the user has accepted the Terms and Conditions.

|  160 complete Supported  161 incomplete Not Supported 162 incomplete
Supported alternatively |  
  
  
  

## Analysis Summary (PUI)

Process and Reports| Prefix| Backend Business| Mismatch with Hypercube
Business| Changes Needed| Note  
---|---|---|---|---|---  
Auth|  
|

  * If new user, then CIF is attached to user in **usr_mapping** table.
  * Creates login for new users as hashed value of cif (netTellerId+"|") + "|" \+ providerName and then inserts entry in **usr_session** if new user.
  * Insert data in **paperless** table.

| No mismatch|  
|  
  
Auth2 |  
|

  * If new user, then CIF is attached to user in **usr_mapping** table.
  * Creates login for new users as hashed value of cif (netTellerId+"|"+cashManagement) + "|" \+ providerName and then inserts entry in **usr_session** if new user.
  * Insert data in **paperless** table.

| No mismatch|  
|  
  
Doc|  
|

  * Finds **fin_account** number. If not found, creates an entry.
  * No user creation, cause autoregister is false.
  * Insert data into paperlss table.

| No mismatch|  
|  
  
Reports| Accounting Report|

  *  **Handler:  **BbbbReport
  * Afp Report
  * Email Notification Report 
  * Reminder Email Notification Report 
  * Enotice Report
  * Enotice Email Notification Report
  * Auth Bank Report
  * Marketing Promo Email Notification Report
  * Inserts Report
  * Estmt_active users Report
  * Accounting Report

| No mismatch|  
|  
  
  
| Active users Report|

  *  **Handler:  **BBBBReportHandler

| No mismatch|  
|  
  
  
| Alt Name Report|

  *  **Handler:** BbbbAltNameReport

| No mismatch|  
|  
  
  
| Paperless Report|

  *  **Handler:** BbbbPaperlessReport

| No mismatch|  
|  
  
Email|  
|

  * Does not sent via API
  * doc.default.automatedEmailNotification=true
  * doc.heloc.automatedEmailNotification=true
  * doc.escrow.automatedEmailNotification=true
  * doc.enotice.automatedEmailNotification=true
  * Does not send email for etax.
  * Template variable: ACCTNUM, ACCTNAME

| No mismatch| Need to set notification.isSendEmailViaAPI=true  
notification.isEmailManageByEstmt=false|  
  
Estmt Email Handler|

  * Handler Name: estmt.BbbbEmailHandler
  * Gets email from **Contact_Info** table.
  * Checks viewable logic. If 'Y' or null then pulls email  address.

|

  *  **Contact_Info  **table not present in hypercube.
  * No viewable logic.

|

  * Need to use **notification_preference** table. So, we can use notifyPrefEmailHandler.
  * Need to add viewable logic.

|  
  
Enotice Email Handler|

  * Handler Name: enotice.BbbbEmailHandler
  * Gets email from **Contact_Info** table.
  * Checks viewable logic. If 'Y' or null then pulls email  address.

|

  *  **Contact_Info  **table not present in hypercube.
  * No viewable logic.

|

  * Need to use **notification_preference** table. So, we can use notifyPrefEmailHandler.
  * Need to add viewable logic.

|  
  
  
  


