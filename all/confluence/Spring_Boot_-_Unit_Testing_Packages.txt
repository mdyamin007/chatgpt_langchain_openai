title: Spring Boot - Unit Testing Packages
body: # JUnit 5 (Jupiter)

<https://junit.org/junit5/>

Junit comes with Spring Boot.

xmlMidnight

  

# MeanBean

<http://meanbean.sourceforge.net/documentation/>

This package is used to test POJOs, so that we do not have write tests for
constructors/getters/setters. One caveat is that the out-of-the-box solution
only works with classes that have all non-final fields. For classes that have
final fields, some additional code must be added, such as a Factory to let the
MeanBeanTester knows how to instantiate the class.

xmlMidnight

  

javaMidnightExampletrue

  

# Mockito

<https://site.mockito.org/>

Mockito is a popular testing package used to mock dependencies. Mockito comes
in the same spring-boot-starter-test package as Junit.

## Spring Test

Spring provides built-in utilities for testing, particularly API/network
dependent logic.

Class| Usage  
---|---  
MockRestServiceServer|

This can be used to mock calls to external APIs. For example, an application's
heartbeat code may be dependent on a downstream application's heartbeat.
MockRestServiceServer can be used to mock the downstream heartbeat, and thus
allow us to validate the expected behavior without depending on the downstream
service actually being up and running.

To use this, the class being tested must use a RestTemplate when calling
external APIs. The MockRestServiceServer interjects whenever the RestTemplate
is used to prevent a real call to any server, enforce behaviors (e.g. expected
HTTP Method, expected headers, etc.) and mock a response.

javaMidnightExampletrue

  
  
  
TestRestTemplate|

This can be used to mock upstream requests in Application-Level Integration
Tests, so that the test class can make the API calls defined in the Controller
level without the need for any external apps. This is usually used in
conjunction with "@SpringBootTest".

javaMidnightExampletrue

  
  
  
  


