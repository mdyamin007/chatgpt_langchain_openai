title: Unix- SSH KeyGen- password-less SSH login
body:   

## HOW TO: set up ssh keys

  * SSH is often used to login from one system to another without requiring passwords.
  * ssh-keygen is used to generate that key pair for you. The command syntax is described below:  
ssh-keygen -t rsa  
or  
ssh-keygen -t dsa

> This will prompt you for a secret passphrase. If this is your primary
> identity key, make sure to use a good passphrase.  
> Note: it is possible to just press the enter key when prompted for a
> passphrase, which will make a key with no passphrase.  
> This is a Bad Idea  for an identity key, so don't do it!

 **Example:**

  * Here is a session where your own personal private/public key pair is created:

    
    
    cantin@sodium:~> ssh-keygen -t rsa
    Generating public/private rsa key pair.
    Enter file in which to save the key (/home/cantin/.ssh/id_rsa):
    Enter passphrase (empty for no passphrase):
    Enter same passphrase again:
    Your identification has been saved in /home/cantin/.ssh/id_rsa.
    Your public key has been saved in /home/cantin/.ssh/id_rsa.pub.
    The key fingerprint is:
    f6:61:a8:27:35:cf:4c:6d:13:22:70:cf:4c:c8:a0:23 cantin@sodium
    

  * The command ssh-keygen -t rsa initiated the creation of the key pair.  
You will get two files called id_dsa and id_dsa.pub in your .ssh dir.

  * No passphrase was entered (Enter key was pressed instead).

  * The private key was saved in .ssh/id_rsa. This file is read-only and only for you.  
No one else must see the content of that file, as it is used to decrypt all
correspondence encrypted with the public key.

  * The public key is save in .ssh/id_rsa.pub.

In this case, the content of file id_rsa.pub is

    
    
    ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIEArkwv9X8eTVK4F7pMlSt45pWoiakFkZMwG9BjydOJPGH0RFNAy1QqIWBGWv7vS5K2tr+EEO+F8WL2Y/jK4ZkUoQgoi+n7DWQVOHsRijcS3LvtO+50Np4yjXYWJKh29JL6GHcp8o7+YKEyVUMB2CSDOP99eF9g5Q0d+1U2WVdBWQM= cantin@sodium
    

  
It is one line in length.

  

Its content is then copied in file .ssh/authorized_keys of the system you wish
to SSH to without being prompted for a password.

The example shown here generated keys on sodium by user cantin.  
If the public key generated, file .ssh/id_rsa.pub, was copied to your account,
file .ssh/authorized_keys on [nickel.sao.nrc.ca](http://nickel.sao.nrc.ca),  
then user cantin@sodium is allowed to SSH into your own account on
[nickel.sao.nrc.ca](http://nickel.sao.nrc.ca) without the use of a password.

To summarize, a personal private/public key pair is generated using the ssh-
keygen command.  
The public key is then copied onto a remote systems' .ssh/authorized_keys
file.  
And you can now SSH to the remote systems's account without the use of a
password.

* * *

Here is the actual output from running the below command on PD-DV1 box:

    
    
    nirajt@pd-dev1:~$ ssh-keygen -t rsa
    Generating public/private rsa key pair.
    Enter file in which to save the key (/home/nirajt/.ssh/id_rsa):
    Created directory '/home/nirajt/.ssh'.
    Enter passphrase (empty for no passphrase):
    Enter same passphrase again:
    Your identification has been saved in /home/nirajt/.ssh/id_rsa.
    Your public key has been saved in /home/nirajt/.ssh/id_rsa.pub.
    The key fingerprint is:
    08:97:2e:92:61:2f:43:50:05:06:fb:a6:06:15:d0:1a nirajt@pd-dev1
    The key's randomart image is:
    +--[ RSA 2048]----+
    |+==o.            |
    |E+..   .         |
    |.o= . o          |
    |.= + + .         |
    |. B o o S        |
    |.o + .           |
    |..               |
    |.                |
    |                 |
    +-----------------+
    nirajt@pd-dev1:~$


