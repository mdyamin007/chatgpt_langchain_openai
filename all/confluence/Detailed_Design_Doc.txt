title: Detailed Design Doc
body: ## Architecture & Workflow Diagram

 _ **Workflow Diagram**_

Updated JSON format for Payment source

[  
    {  
        "id": 123,  
        "cid": "demo",  
        "appId": "epay",  
        "customerNumber": "????",  
        "nickName": "chase cc",  
        "primary": false,  
        "paymentSource": {  
            "type": "card",  
            "cardNumber": "1234567812345678",  
            "cardholderName": "John D Doe",  
            "cardType": "mastercard",  
            "expirationDate": "2015-09-02",  
            "cvv": "483"   
        }  
    },  
    {  
        "id": 234,  
        "cid": "demo",  
        "appId": "epay",  
        "customerNumber": "????",  
        "nickName": "wellsfargo checking",  
        "primary": false,  
        "paymentSource": {  
            "type": "ach",  
            "accountNumber": "12345678",  
            "routingNumber": "987654",  
            "nameOnCheck": "John Doe",  
            "zipCode": 93857  
        }  
    }  
]

    
    
      
    

  

    
    
    Updated JSON format for Payment

{  
  "cid": "",  
  "appId": "",  
  "customerNumber": "",  
  "amount": 0,  
  "processingDate": "",  
  "submitMethod": "",  
  "dateOfMonth": "",  
  "paymentAmountType": "",  
  "comments": "",  
  "paymentStatus": "",  
  "paymentSourceType": "",  
  "paymentSourceId": 0,  
  "card": {  
    "cardNumber": "",  
    "cardholderName": "",  
    "cardType": "",  
    "expirationDate": "",  
    "cvv": ""   
  },  
  "account": {  
    "accountNumber": "",  
    "routingNumber": "",  
    "nameOnCheck": "",  
    "zipCode": 0  
  }  
}

    
    
      
    

Recurring Payment diagram

 **NOTE:**  Epx audit log for keeping track all epx api call, this log table
will be used for audit and billing purpose.

 _ **Table: epay_epx_audit**_

Property| Type| Description  
---|---|---  
id| Long| Generated by Oracle sequence table  
org_id| String| Which org the api call is belongs to  
acct_id| String| Which acct the api call is belongs to  
user_id| String| Which user the api call is belongs to  
tran_num| String| Its acually bill id cause we are passing bill id as a filed
value of tranNbr  
transaction_type| String| What type of transaction it was, actually its carry
some code(i.e. CCE0 for account verification, CCE1 for card transaction, CCE8
for eCommerce bric storage etc.)  
amount| Double| Requested amount during api call  
auth_code| String| Transaction approval code got from epx response  
auth_card_type| String| Card type got from epx response  
auth_txn_date| String| Txn date got from epx response  
auth_card_cntry_code| String| Card country code got from epx response  
mask_acct_num| String| Mask account number got from epx response  
auth_avs| String| Addres verification code got from epx response  
epx_txn_num| String| Exp transaction unique identification number got from epx
response  
VERBOSE_RESP| String| Determines if the verbose transaction response will be
enabled  
batch_id| String| Transaction date this field is send in the transaction
requested fields  
auth_card_l| String| Is used for visa based transaction got from epx response  
auth_card_b| String| Is used for getting know the card type  
created_on| String| When log was created  
  
  
  

## EPX Settlement report processing diagram  

  
  

## EPX daily invoice processing diagram  

  
  

## Epx settlement data flow  

  

### Attachments

  

  

  


