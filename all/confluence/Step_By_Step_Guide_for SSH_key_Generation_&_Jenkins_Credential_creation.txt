title: Step By Step Guide forSSH key Generation & Jenkins Credential creation
body:   

250

#  **Keys** folder structure

  

[ca-utils-pr-01.infoimageinc.com](http://ca-utils-pr-01.infoimageinc.com)
([https://jenkins.infoimageinc.com](https://jenkins.infoimageinc.com)) is the
Jenkins server. So log on to the jenkins server then go to directory

/var/data/jenkins/keys  
  
---  
  
  

Under this directory we'll see several sub folders like **ca-infotrac-pr-01,
ca-apipui-pr-01** and so on. We store all the generated ssh public and private
keys in each folder under the .ssh sub folder. You'll be needing sudo
permission to access the keys.

For example the public key and private key for [ca-infotrac-
pr-01.infoimageinc.com](http://ca-infotrac-pr-01.infoimageinc.com) is located
at

  

/var/data/jenkins/keys/ca-infotrac-pr-01/.ssh/id_rsa.pub      **public** key  
/var/data/jenkins/keys/ca-infotrac-pr-01/.ssh/id_rsa          **private** key  
  
---  
  
  
  
  

#  **Generate** a new key

  

Let's say you want to generate a new ssh key for a new server. Let's assume
the server name is

 **ca-newserver-xx-01**

Create a new directory with a subdirectory named .ssh

 **$** **sudo mkdir -p** /var/data/jenkins/keys/ca-newserver-xx-01/.ssh  
  
---  
  
  

Our directory structure is all set. Now let's generate a pair of SSH keys
(public & private)

 **$** **sudo ssh-keygen**  
  
---  
  
  

Press Enter and provide the location for the key. For the file name I chose
id_rsa

/var/data/jenkins/keys/ca-newserver-xx-01/.ssh/id_rsa  
  
---  
  
Enter your passphrase or leave it empty by pressing Enter. If you enter a
passphrase you need to remember it. We'll need that passphrase when we'll
create the Jenkins Credentials.

  

Figure 01: ssh key generation

  

Now we can see two files have been created. One is **id_rsa** & other is
**id_rsa.pub.   **This id_rsa.pub is the public key.

/var/data/jenkins/keys/ca-newserver-xx-01/.ssh/id_rsa  
/var/data/jenkins/keys/ca-newserver-xx-01/.ssh/id_rsa.pub  
  
---  
  
  

This **public key** **(Note: Never share your private key)** needs to be
copied to our new server **(ca-newserver-xx-pr-01)**

We can log on to our **ca-newserver-xx-pr-01** server, and copy paste this
public key into **authorized_keys** file in ca-newserver-xx-pr-01 server's
user ~/.ssh folder.

 **Fortunately,** There is another command to do that. We can specify the
public key with **-i** flag with the **ssh-copy-id** command.

 **$** **sudo ssh-copy-id** -i /var/data/jenkins/keys/ca-newserver-
xx-01/.ssh/id_rsa.pub **[manager@ca-newserver-
xx-01.infoimageinc.com](mailto:manager@ca-newserver-xx-01.infoimageinc.com)**  
  
---  
  
  
  

 **Who is this manager?** And it's asking the manager's password to copy the
id. Where do I get it?

 **manager** is a user in ca-newserver-xx-01, which will be used in our
Ansible script to ssh the server. You need this manager (or, any other user is
fine) user and the password to copy the public key.

  

In case, you don't have the manager user. I would suggest creating one by
yourself. See the **Create manager in a server** section in the document.  
  
---  
  
  
  

Now that you copied the public key on the server. You should be good to go.
You can check by trying to ssh into ca-newserver-xx-01

 **$** sudo ssh -i /var/data/jenkins/keys/ca-newserver-xx-01/.ssh/id_rsa
[manager@ca-newserver-xx-01.infoimageinc.com](mailto:manager@ca-newserver-
xx-01.infoimageinc.com)  
  
---  
  
  

You should be logged into the server without a password. If you do this for
the first time, you might be prompted to a confirmation question.

Type **yes** and press Enter.

Hooray, Now you're logged in to the destination server without a password.

  

The server has your public key stored. When you try to ssh, it validates the
key with your private key. If it's valid then it let's you securely connect to
the server.  
  
---  
  
  

#  **Jenkins Credential** **Creation**

  
  

  1. If required, ensure you are logged in to Jenkins (as a user with the Credentials > Create permission).
  2. From the Jenkins home page (i.e. the Dashboard of the Jenkins classic UI), click Credentials > System on the left. Under System, click the Global credentials (unrestricted) link to access this default domain.
  3. Click Add Credentials on the left. Note: If there are no credentials in this default domain, you could also click the add some credentials link (which is the same as clicking the Add Credentials link).
  4. From the Kind field, choose the [type of credentials](https://www.jenkins.io/doc/book/using/using-credentials/#types-of-credentials) to add. Choose, **SSH Username with private key**.
  5. From the Scope field, choose **Global**
  6. ID : is the id for the credential, it has to be a unique name (convention is, use user-<server>. Example, manager-ca-newserver-xx-01
  7. Description: You can give a description if you want to. Like 'ssh key for manager in ca-newserver-xx-01'\
  8. Username: put the username for the server. For example, **manager**
  9.  Private key, Enter directly, and add the private key from the server.  Just copy and paste the key here. To see the key, execute the following command.

 **$** sudo cat /var/data/jenkins/keys/ca-newserver-xx-01/.ssh/id_rsa  
  
---  
  
  

     10\. Passphrase: if you provided any passphrase while generating the ssh key, put it here. Otherwise, leave it empty.

  
  

Figure: Create global credential in jenkins

#  **Create manager** **in a server**

  

Use the following command to create a user and group name "manager"

 **$** sudo useradd -m -d /home/manager -s /bin/bash -c "Manager for Ansible"
-U manager  
  
---  
  
  

After creating the user create a password for manager with the following
command

 **$** sudo passwd manager  
  
---  
  
  

We need the manager to be passwordless sudo permitted, since it will be used
for Ansible. To do that we need to add a line. Use the following command to
open the file.

  
  

 **$** sudo visudo  
  
---  
  
  
Add the following line at the bottom of the file. This line generally means
that "give all the permission with no password for manager group"

  
  

%manager   **ALL** =( **ALL** : **ALL** ) NOPASSWD: **ALL**  
  
---  
  
  
  


