title: SSO SAML20
body: << Work in progress...>>  
  

## 1\. Introduction

Single Sign-On is a process that allows network users to access all authorized
network resources without having to separately log in to each resource. Single
Sign-On also enables your organization to integrate with an external identity
management system or perform web-based single sign-on to
[Force.com](http://Force.com). Single Sign-On enables multiple types of
authentication integration, but the most common are:

  * Use an existing directory of user names and passwords, such as Active Directory or LDAP, for Salesforce users
  * Allow seamless sign-on to [Force.com](http://Force.com) applications, eliminating the need for explicit user log on actions

  
  

## 2\. Benefits

Single Sign-On produces benefits in three main areas - reduction in
administrative costs, increased ease of use and better implementation of
security schemes.

  * Reduced Administrative Costs: With Single Sign-On, all user authentication information resides in a central directory, which reduces the need to maintain, monitor and potentially synchronized multiple stores, as well as reducing user support requests around passwords.
  * Increased ease of use: Each user only has a single username and password which grants them access to corporate resources and Salesforce. Reduced complexity means an easier to use environment that provides seamless access to all resources. Single Sign-On also saves users time, since each individual sign-on process can take 5 to 20 seconds to complete. And removing the extra step of logging into Salesforce can increase user adoption of your Salesforce applications by lowering the barrier to use.
  * Increased Security: Any password policies that you have established for your corporate network will also be in effect for Salesforce. In addition, sending an authentication credential that is only valid for a single use can increase security for users who have access to sensitive data.

  
  

## 3\. Benefits of Implementing SSO

Implementing SSO provides not only time-saving benefits for end users but
financial benefits for your company. Major benefits of SSO include:

  * Improved productivity - It takes an average of 20 seconds for a user to log into a resource. Not having to enter a password each time a user needs to access a resource saves time and makes users more productive.
  * Reduce frustration of multiple log-on events and forgotten passwords - Users only have one password to remember and update, and only one set of password rules to remember. Their initial login provides them with access to all resources, typically for the entire day.
  * Increased adoption - SSO reduces the barriers of use for resources. Since it is easier to access applications, users will start using them more.
  * Centralized user access control - A single registry of user identities with a centralized management interface allows quick and easy provisioning and deactivating of users.
  * Improved reporting and monitoring - A single repository for auditing and logging access to resources provides streamlined regulatory compliance.
  * Increased security - A secure, enterprise-wide infrastructure with common password and security policies that can be centrally managed and secured. Users are also less likely to write down their passwords when there is only one to remember.
  * Uniform security layer - SAML is platform agnostic allowing enterprise architects to implement a uniform security layer with existing assets.
  * Reduced helpdesk costs - Fewer helpdesk calls for password resets relates directly to bottom-line savings.

  

  
  

## 4\. SAML

Security Assertion Markup Language (SAML) is an XML based framework developed
by the Organization for the Advancement of Structured Information Standards
(OASIS), used for the exchange of security information between different
parties. This is an open standard that can be used to exchange security
information between different products.

SAML is an OASIS standard and consists of several specifications. A SAML token
is issued by an identity provider. A service provider relies on the identity
provider to authenticate a principal (a user). The SAML assertion is provided
to the service provider allowing it to make an access control decision. The
main problem SAML tries to solve is Web Single Sign On.

  * A SAML assertion (also known as SAML security token) contains different kinds of statements: authentication-, attribute- and authorization decision statements.
  * A SAML assertion contains a subject which identifies the principal. The subject can also contain additional information like key material and the subject confirmation method.

Security Assertion Markup Language (SAML) is an XML standard for exchanging
authentication and authorization data between entities which is a product of
the OASIS Security Services Technical Committee.

  * SAML 1.0 was adopted as an OASIS standard in Nov 2002
  * SAML 1.1 was ratified as an OASIS standard in Sept 2003
  * SAML 2.0 became an OASIS standard in Mar 2005

  

SAML is built upon the following technology standards.

  * Extensible Markup Language (XML)
  * XML Schema
  * XML Signature
  * XML Encryption (SAML 2.0 only)
  * Hypertext Transfer Protocol (HTTP)
  * SOAP

 **SAML Components**

  * Assertions: Authentication, Attribute and Authorization information
  * Protocol: Request and Response elements for packaging assertions
  * Bindings: How SAML Protocols map onto standard messaging or communication protocols
  * Profiles: How SAML protocols, bindings and assertions combine to support a defined use case

 **SAML Bindings**

  * SAML SOAP Binding
  * Reverse SOAP (PAOS) Binding
  * HTTP Redirect Binding
  * HTTP POST Binding
  * HTTP Artifact Binding
  * SAML URI Binding

  
  

## The benefits of SAML include:

 Platform neutrality  
SAML abstracts the security framework away from platform architectures and
particular vendor implementations. Making security more independent of
application logic is an important tenet of Service-Oriented Architecture.

 Loose coupling of directories  
SAML does not require user information to be maintained and synchronized
between directories.

 Improved online experience for end users  
SAML enables single sign-on by allowing users to authenticate at an identity
provider and then access service providers without additional authentication.
In addition, identity federation (linking of multiple identities) with SAML
allows for a better-customized user experience at each service while promoting
privacy.

 Reduced administrative costs for service providers  
Using SAML to "reuse" a single act of authentication (such as logging in with
a username and password) multiple times across multiple services can reduce
the cost of maintaining account information. This burden is

 Risk transference  
SAML can act to push responsibility for proper management of identities to the
identity provider, which is more often compatible with its business model than
that of a service provider.  
  

### Assertions

An assertion is a package of information that supplies one or more statements
made by a SAML authority. SAML defines three different kinds of assertion
statement that can be created by a SAML authority.  
Authentication: The specified subject was authenticated by a particular means
at a particular time. This kind of statement is typically generated by a SAML
authority called an identity provider, which is in charge of authenticating
users and keeping track of other information about them.  
Attribute: The specified subject is associated with the supplied attributes.  
Authorization Decision / Entitlement Info: A request to allow the specified
subject to access the specified resource has been granted or denied.  
  

### Protocols

SAML defines a number of request/response protocols that allow service
providers to:  
Request from a SAML authority one or more assertions (includes a direct
request of the desired assertions, as well as querying for assertions that
meet particular criteria)  
Request that an identity provider authenticate a principal and return the
corresponding assertion  
Request that a name identifier be registered  
Request that the use of an identifier be terminated  
Retrieve a protocol message that has been requested by means of an artifact  
Request a near-simultaneous logout of a collection of related sessions
("single logout")  
Request a name identifier mapping  
  

### Bindings

Mappings from SAML request-response message exchanges into standard messaging
or communication protocols are called SAML protocol bindings. For instance,
the SAML SOAP Binding defines how SAML protocol messages can be communicated
within SOAP messages, whilst the HTTP Redirect binding defines how to pass
protocol messages through HTTP redirection.  
  

### Profiles

Generally, a profile of SAML defines constraints and/or extensions in support
of the usage of SAML for a particular application, the goal being to enhance
interoperability by removing some of the flexibility inevitable in a general-
use standard. For instance, the Web Browser SSO Profile specifies how SAML
authentication assertions are communicated between an identity provider and
service provider to enable single sign-on for a browser user.

The Web SSO Profile details how to use the SAML Authentication
Request/Response protocol in conjunction with different combinations of the
HTTP Redirect, HTTP POST, HTTP Artifact, and SOAP bindings.

Another type of SAML profile is an attribute profile. SAML defines a series of
attribute profiles to provide specific rules for interpretation of attributes
in SAML attribute assertions. An example is the X.500/LDAP profile, describing
how to carry X.500/LDAP attributes within SAML attribute.  
  

## Where SAML will be used?

  
  

### Web single sign on

In web SSO, a user authenticates to one web site and then, without additional
authentication, is able to access some personalized or customized resources at
another site. SAML enables web SSO through the communication of an
authentication assertion from the first site to the second which, if confident
of the origin of the assertion, can choose to log in the user as if they had
authenticated directly.  
Attribute-Based Authorization

  

Similar to the Web SSO scenario, the attribute based authorization model has
one web site communicating identity information about a subject to another web
site in support of some transaction. However, the identity information may be
some characteristic of the subject (such as a person's role in a B2B scenario)
rather than, or in addition to, information about when and how the person was
authenticated. The attribute-based authorization model is important when the
individual's particular identity is either not important, should not be shared
for privacy reasons, or is insufficient on its own.  
  

### Securing Web Services

SAML assertions can be used within SOAP messages in order to convey security
and identity information between actors in web service interactions. The SAML
Token Profile produced by the OASIS Web Services Security (WSS) TC specifies
how SAML assertions should be used for this purpose with the WS-Security
framework. The Liberty Alliance's Identity Web Service Framework (ID-WSF)
builds on these specifications to use SAML assertions for enabling secure and
privacy respecting access to web services.  
  

### Web Services Security: SAML Token Profile 1.1

This specification describes how to use SAML V1.1 and V2.0 assertions with the
Web Services Security SOAP Message Security V1.1 specification.  
  

## SAML 2.0 profile of XACML

The OASIS eXtensible Access Control Markup Language [XACML] is a powerful,
standard  
language that specifies schemas for authorization policies and for
authorization decision requests and responses.

This profile defines how to use SAML 2.0 to protect, transport, and request
XACML schema instances and other information needed by an XACML implementation  
  

## Single sign-on

By definition, once a user has successfully authenticated in the SSO domain,
that user is not required to present  
his authentication information again. These established credentials are used
to automatically authenticate the  
user to the applications participating in the SSO domain.

 **Single Sign On (SSO) needs for financial web systems**

### Attachments


