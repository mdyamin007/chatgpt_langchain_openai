title: eStatement Mavenized application Setup
body:   

**Eclipse Configuration:**

1\. Open eclipse and import project from svn from below url:  
svn+ssh:[//pshah@pd-tools.infoimage.com](mailto://pshah@pd-
tools.infoimage.com)/srv/svn/estmt2/sdbx/trunk

2\. Right Click on project -> Configure -> Conver to maven project.

3\. Now, File -> Import -> Existing Project into Workspace.

4\. Now You will see three checkbox. One for parent project(sdbx), msm, and
ROOT. Make sure only check box for msm, and ROOT are checked.

5\. Click on Finish.

6\. Now, you will see three project in eclipse.  
1\. sdbx  
2\. ROOT  
3\. msm

6\. Do svn checkout for svn+ssh:[//bchan@pd-
tools.infoimage.com](mailto://bchan@pd-
tools.infoimage.com)/srv/svn/estmt2/app-depend-libs/trunk.

7\. Open pom.xml for msm and ROOT project.

8\. Look for <client-lib>C:/webapp-lib</client-lib>. You need to put all jar
files used web application in one folder, and replace C:/webapp-lib with the
folder where you have checkout all jars.

 **Tomcat configuration:**

1\. Now, open server.xml, and copy the corresponding code from attached
server.xml.

2\. Also replace context.xml as attached context.xml

3\. Open catalina.properties. Look for shared.loader, add following.  
Add shared.loader=C:/webapp-lib/*.jar  
Note: C:/webapp-lib will be replaced with your path where you have checkout
all jars.

 **Maven Build:**

1\. Now, in order to generate war file, Rigth click on sdbx -> Run As -> Maven
Build, OR open command prompt, go to sdbx project, and run command mvn clean
package.

2\. If you have configured your project correctly, Build should success, and
you will see war file under target folder of each project.

3\. Create i3webapps folder under tomcat, and copy both war files.

4\. Now, start your tomcat, and try to access urls.

  

### Attachments

  

250 250 250250


