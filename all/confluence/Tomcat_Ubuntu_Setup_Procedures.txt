title: Tomcat/Ubuntu Setup Procedures
body: ## JDK/JRE setup

 Download JDK (say jdk-7u71-linux-x64.gz)

    
    
    sudo mkdir -p /usr/local/java
    sudo -s cp -r ~/Downloads/jdk-7u71-linux-x64.gz /usr/local/java
    cd /usr/local/java
    sudo -s chmod a+x jdk-7u71-linux-x64.gz
    sudo -s tar xof jdk-7u71-linux-x64.gz
    

  

 Configure JAVA_HOME: edit the /etc/profile add the following and save the
file.

    
    
    JAVA_HOME=/usr/local/java/jdk1.7.0_71
    PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:
    export JAVA_HOME
    

  

 Update Ubuntu where your Oracle Java JDK/JRE is located

    
    
    sudo update-alternatives --install "/usr/bin/java" "java" "/usr/local/java/jdk1.7.0_71/bin/java" 1
    sudo update-alternatives --install "/usr/bin/jar" "jar" "/usr/local/java/jdk1.7.0_71/bin/jar" 1
    sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/local/java/jdk1.7.0_71/bin/javac" 1
    sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/local/java/jdk1.7.0_71/bin/javaws" 1
    

  

 Update Ubuntu that Oracle Java JDK/JRE must be the default Java.

    
    
    sudo update-alternatives --set java /usr/local/java/jdk1.7.0_71/bin/java
    sudo update-alternatives --set jar /usr/local/java/jdk1.7.0_71/bin/jar
    sudo update-alternatives --set javac /usr/local/java/jdk1.7.0_71/bin/javac
    sudo update-alternatives --set javaws /usr/local/java/jdk1.7.0_71/bin/javaws
    

  

    
    
     sudo update-alternatives --config java
    

  
The above command will let you choose which jre to make default if you have
multiple JREs installed.

 reload your .profile file

    
    
    . /etc/profile
    

  

## Install & Start Tomcat

  1. To install tomcat, download the tar.gz file from <http://tomcat.apache.org/download-70.cgi>
  2. Expand the tar.gz file under /usr/local/tomcat folder
    1. Example: /usr/local/tomcat/tomcat-cu
    2. Ensure the installed tomcat folder is owned by user 'tomcat'
  3. To start the tomcat server: `sudo service tomcat7 start`
  4. Test if tomcat is in fact started, visit `http://<host>:<port>/` (e.g. <http://pd-dev3.infoimage.com:8080/>)
    1. The default port is 8080, but if your port 8080 is already occupied for other service/processes, you will need to change it in server.xml
    2. Default path is `/usr/local/tomcat/tomcat-cu/conf/server.xml`
    3. Look for the corresponding `<Connector `tag and update the port value to your choice (e.g. <http://pd-dev3.infoimage.com:7080/>)
  5. Configure it to use SSL
    1. Generate a self-signed SSL cert if not already  

        
                keytool -genkey -alias pd-dev3 -keyalg RSA -keystore /usr/local/tomcat/certs/pd-dev3-keystore

    2. Update the `<Connector `as follow  

        
                <Connector port="7080" protocol="HTTP/1.1" 
            SSLEnabled="true" maxThreads="150" scheme="https" secure="true" 
            clientAuth="false" sslProtocol="TLS" 
            connectionTimeout="20000" 
            URIEncoding="UTF-8" 
            keystoreFile="certs/pd-dev3-keystore" 
            keystorePass="infoimage" />
          

  6. Update the `/usr/local/tomcat/tomcat-cu/conf/tomcat-users.xml` to allow access to:
    1. web application manager console page (e.g. <https://pd-dev3.infoimage.com:7080/manager/html>)
    2. host-manager console page (e.g. <https://pd-dev3.infoimage.com:7080/host-manager/html>)
  7. Update the `/usr/local/tomcat/tomcat-cu/bin/setenv.sh` to increase the heap size for the JVM
    1. At top of script, add this line:  

        
                export CATALINA_OPTS="-Xms1024m -Xmx1024m -XX:PermSize=256m  -XX:MaxPermSize=128m" 
        export JAVA_OPTS="-Dcom.infoimage.configfile=$CATALINA_HOME/i3webapps/system.prop"

  8. Pull the dependent libraries from SVN for eStmt Web-application (if applicable) on /var/lib/app-depend-libs/estmt  

    
        mkdir /var/lib/app-depend-libs/estmt2
    cd /var/lib/app-depend-libs/estmt2
    svn co svn+ssh://pd-tools.infoimage.com/srv/svn/app-depend-libs/estmt2/trunk .

  9. Pull the app-configs from SVN for InfoService (if applicable) on /usr/local/tomcat/app-configs/infoservice  

    
        mkdir /usr/local/tomcat/app-configs/infoservice
    cd /usr/local/tomcat/app-configs/infoservice
    svn co svn+ssh://pd-tools.infoimage.com/srv/svn/app-configs/infoservice/trunk .
    chown builder:tomcat /usr/local/tomcat/app-configs/infoservice
    chmod 750 /usr/local/tomcat/app-configs/infoservice

  10. Update `conf/catalina.properties`
    1. to include the dependent libraries: Find key `shared.loader` and add corresponding path. Example:  

        
                shared.loader=/var/lib/i3-lib/estmt2/*.jar

    2. to include the app-config properties: Find key `common.loader` path to tomcat's loader, add `app-configs` path. Example:  

        
                common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar,/usr/local/tomcat/app-configs/infoservice/

    3. to allow certain keyword to be used: Add following key  

        
                org.apache.el.parser.SKIP_IDENTIFIER_CHECK=true

  

## Setup Virtual Host for needed application

  1. Update the `server.xml` to add/update below block of config for any virtual host needed  

    
              <Host name="bkcu-prod.infoimageinc.com"  appBase="i3webapps/bkcu" 
                unpackWARs="true" autoDeploy="true">
            <Alias>esignatures.bfcu.org</Alias>
            <Context path="/ROOT" reloadable="true" >
              <ResourceLink global="jdbc/default" name="jdbc/default" 
                            type="oracle.jdbc.pool.OracleConnectionPoolDataSource"/>
            </Context>
            <Context docBase="msm" path="/msm" reloadable="true">
              <ResourceLink global="jdbc/default" name="jdbc/default" 
                            type="oracle.jdbc.pool.OracleConnectionPoolDataSource"/>
            </Context>
            <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs" 
                   prefix="bkcu-pilot.infoimageinc.com_access_log." suffix=".txt" 
                   pattern="%h %l %u %t &quot;%r&quot; %s %b" />
          </Host>
      

  2. The  **`name`**  value need to match to whatever incoming URL host expected. If necessary, can add `<Alias>` tag to handle multiple URL host expected for the same application.
  3. The  **`appBase`**  holds the path value of where the corresponding web-application's `ROOT` folder is located. It should be a relative path to the CATALINA_HOME. (e.g. `/var/lib/tomcat7/i3webapps/sscu` )
  4. Create the folder of where `appBase` specified if not already, change owner of the folder to `builder` if you would like jenkins to build/deploy it automatically
  5. Change user to `builder` by: `sudo su - builder`
  6. Pull the SVN code to the web application folder:  

    
            cd /var/lib/tomcat7/i3webapps/sscu
        svn co svn+ssh://pd-tools.infoimage.com/srv/is_svn/branches/production/vhost/sscu .
      

  

## Update web.xml paths if applicable

  1. Update the sscu/ROOT/WEB-INF/web.xml path values

  

## Update application specific configurations

  1. reference page: <http://www.microdeveloper.com/html/JNDI_Orcl_Tomcat1p.html>
  2. Modify the server.xml to add following block within the `<GlobalNamingResources>` block  

    
            <Resource name="jdbc/default" auth="Container" 
                  type="oracle.jdbc.pool.OracleDataSource" 
                  driverClassName="oracle.jdbc.OracleDriver" 
                  factory="oracle.jdbc.pool.OracleDataSourceFactory" 
                  url="jdbc:oracle:thin:@10.8.8.215:1521:wodb" 
                  user="ora_admin" password="ora_admin" maxActive="20" maxIdle="10" 
                  maxWait="-1"/>

  3. Add the following line inside the context.xml `<Context>` block  

    
        <ResourceLink global="jdbc/default" name="jdbc/default" type="oracle.jdbc.pool.OracleDataSource"/>

  4. Add following lines inside the web.xml `<web-app>` block  

    
            <resource-ref>
            <description>ISD Oracle database</description>
            <res-ref-name>jdbc/default</res-ref-name>
            <res-type>oracle.jdbc.pool.OracleDataSource</res-type>
            <res-auth>Container</res-auth>
        </resource-ref>

  5. While setting up more clients from the same schema add below configuration in the client's web.xml file  
e.g (elcu client)  

    
                <context-param>
                    <param-name>webAppRootKey</param-name>
                    <param-value>elcu</param-value>
            </context-param>

  6. Place the system.prop (legacy properties file) in `/var/lib/tomcat7/i3webapps` or wherever specified by the JAVA_OPTS above
    1. Inside the system.prop, ensure the following keys are updated accordingly. Use the $CATALINA_HOME variable as-is to avoid hardcoded paths  

        
                webserver.root=$CATALINA_HOME
        webserver.config=$CATALINA_HOME/i3webapps
        

  7. Place the logging.conf inside the CID folder so that it gets picked up by the `SystemProperties` class
    1. Make sure the CID value inside the logging.conf is spelled correctly!!
  8. Add these hosts entries for the AFP2WEB (for viewing documents) and mailerserver (send emails through the site)  

    
           10.8.9.17       afp2web
       10.8.8.17       mailersvr
    

  9. Create mount point to direct to PV-NAS server. Each environment has a different PV-NAS location:  

    
        Pilot: //10.8.8.216/indiv_afp on /mnt/10.8.8.216/indiv_afp
    

  10. Add mount drive path to table "Storage_Servers" in default schema  

    
        Example for Pilot Environment:
    Name = a
    Priority = 2
    Mapped_Name = /d/PV-NAS-PILOT/indiv_afp
    Server_Path = /mnt/10.8.8.216
    Active = Y
    

## Deploy the web application

  

## Setup Jenkins to build automatically


