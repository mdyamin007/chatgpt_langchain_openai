title: Configuration File Specifications
body: * * *

  

Table of Contents

truenone

  
  
  
---  
  
# Document

* * *

Parameter

|

Input Value

|

Description  
  
---|---|---  
[ _processing_type_ ].preprocess.step.[ _integer_ ]| [ _preprocess_name_ ]|
Define any preprocess(es) to be carried out before the main process.  
  
afp.compress.rootPath

| [ _full pathname_ ]| Root path to store the zipped output files for afp
processing.  
afp.compression| [ _boolean_ ]: true, false| Define whether to compress the
output files for afp processing.  
doc.[ _statement_type_ ].automatedEmailNotification| [ _boolean_ ]: true,
false| For each statement type, define whether to send automated emails
(AutoSend).  
doc.[ _statement_type_ ].estmtselinsert| [ _boolean_ ]: true, false| Define
whether to get DT_JOB_ID from IS DB.  
doc.[ _statement_type_ ].isXml| [ _boolean_ ]: true, false| UNUSED VARIABLE.  
doc.automatedEmailNotification| [ _String_ ]| The text for the automated email
notification.  
doc.compress.rootPath| [ _full pathname_ ]| Root path to store the zipped
output files for non-afp processing.  
doc.compression| [ _boolean_ ]: true, false| Define whether to compress the
output files for processing that is neither afp nor etax.  
doc.convert.system| [ _environment_ ]| The  in which to register the
statements.  
doc.copyZipBuffer| [ _integer_ ]| Define the size of the copy buffer.  
doc.isSharingAfps| [ _boolean_ ]: true, false|

Define whether the afp sharing feature is enabled.  
  
doc.rootPath| [ _full pathname_ ]| Root path to input files for real
documents.  
doc.test.rootPath| [ _full pathname_ ]| Root path to input files for test
documents.  
etax.compression| [ _boolean_ ]: true, false| Define whether to compress the
output files for etax processing.  
global.[ _prefix_ ]| [ _statement_type_ ]| Map filename prefix to a statement
type.  
global.[ _statement_type_ ].blockEmail| [ _boolean_ ]: true, false| For each
statement type, define whether automated emails are enabled.  
global.[ _statement_type_ ].bypassApproval| [ _String_ ]: DP| Allows DP to
bypass approval requirement (needApproval = true).  
global.[ _statement_type_ ].desc|

[ _String_ ]

| For each statement type, define the description.  
global.[ _statement_type_ ].needApproval|

[ _boolean_ ]: true, false

|

Define whether the job needs approval from the client.  
  
global.insertMissingDefault| [ _boolean_ ]: true, false| Define whether to set
default paperless status for members without one (for clients that do not have
selective paperless).  
global.merge.cid| [ _current_cid_ ],[ _new __cid__ ]|[ _current __cid__ ],[
_new __cid__ ]|...| Define the logic to swap cid for merged clients.  
global.multipleDocType| [ _boolean_ ]: true, false| Define whether there are
multiple document types. If false or undefined, AutoSend is always true.
Otherwise, AutoSend = NOT global.[ _statement_type_ ].blockEmail.  
global.multipleStmtType| [ _boolean_ ]: true, false| Define whether there are
multiple statement types.  
  
# eTax

* * *

Parameter| Input Value| Description  
---|---|---  
  
etax.preprocess.step.[ _integer_ ]

e.g. etax.preprocess.step.1

|

[ _preprocess_name_ ]

e.g. acctlookup

| Define any preprocess(es) to be carried out before the main process.  
etax.automatedEmailNotification|

[ _boolean_ ]: true, false

| Define whether to send out automatic scheduled emails for eTax (AutoSend).
This parameter will only be processed iff global.etax.blockEmail = true.
Otherwise, AutoSend is turned on by default.  
etax.compress.rootPath| [ _full pathname_ ]| Define the path to the directory
where the compressed output will be saved.  
etax.compression| [ _boolean_ ]: true, false| Define whether to compress the
output files.  
etax.copyZipBuffer| [ _integer_ ]| Define the size of the copy buffer.  
etax.createAccount| [ _boolean_ ]: true, false| Define whether the processing
will create a new entry in the database if the listed account number DNE.  
etax.isSharingAfps| [ _boolean_ ]: true, false| Define whether the afp sharing
feature is enabled.  
etax.isZipped| [ _boolean_ ]: true, false| Define whether the input files are
zipped, so that the processing knows to unzip.  
etax.rootPath| [ _full pathname_ ]| Define the path to the directory
containing the input files.  
global.enableAccountType| [ _boolean_ ]: true, false| Define whether to
include account type in the query.  
global.etax.blockEmail| [ _boolean_ ]: true, false| If true, the process will
refer to etax.automatedEmailNotification for AutoSend setting.  
global.etax.needApproval|

[ _boolean_ ]: true, false

| Define whether the processing will need to be approved by the client. The
default value is true.  
  
# Permission

* * *

Parameter| Input Value| Description  
---|---|---  
permission.handler.classPath|

com.infoimage.processing.application.permission.handler.[ _handler_class_name_
]

|

Path to the permission handler class.

Must be of the same type as the registrar.  
  
permission.registrar.classPath|

com.infoimage.processing.application.permission.registrar.[
_registrar_class_name_ ]

|

Path to the permission registrar class.

Must be of the same type as the handler.

Currently, all CID specific handlers uses the DefaultPermRegistrar.  
  
permission.level| [ _integer_ ]|

Used only for Default.

The permission level to be set for all listed account in the index file.  
  
permission.purge|

[ _boolean_ ]: yes, no

| Define whether the existing permission data will be purged.  
  
  


