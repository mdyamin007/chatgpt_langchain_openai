title: SVN Commands
body: svn add mule_sftpscannerservice svn+<ssh://nirajt@pd-tools/srv/svn/eai>

<http://wiki.greenstone.org/wiki/index.php/Useful_SVN_Commands>  
<http://www.clear.rice.edu/comp314/svn.html>  
<http://www.yolinux.com/TUTORIALS/Subversion.html>  
<http://www.linuxfromscratch.org/blfs/edguide/chapter03.html>  
<http://www.thegeekstuff.com/2011/04/svn-command-examples/>  
<http://svnbook.red-bean.com/nightly/en/svn.serverconfig.overview.html>

<http://www.mulesoft.org/documentation/display/current/Persisting+Environment+Data>

    
    
    &lt;!-- REST stuff --&gt;  
        &lt;bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" scope="singleton"&gt;  
            &lt;constructor-arg&gt;  
                &lt;bean class="org.mule.galaxy.rest.jackson.ObjectMapper"&gt;
    
    
    &lt;/bean&gt;  
            &lt;/constructor-arg&gt;  
        &lt;/bean&gt;

package org.mule.galaxy.rest;

import [javax.ws](http://javax.ws).rs.core.Response;  
import [javax.ws](http://javax.ws).rs.core.Response.ResponseBuilder;  
import [javax.ws](http://javax.ws).rs.ext.ExceptionMapper;  
import [javax.ws](http://javax.ws).rs.ext.Provider;

import org.mule.galaxy.security.AccessException;

@Provider  
public class AccessExceptionMapper implements ExceptionMapper<AccessException>
{

    
    
    public Response toResponse(AccessException e) {  
            return error("User did not have permissions to access that resource or perform that operation (" + e.getMessage() + ")", Response.status(401));  
        }
    
    
    protected Response error(String string, ResponseBuilder builder) {  
            return builder.type("application/json").entity(new ErrorMessage(string)).build();  
        }  
    }

color: #336699  
font-size: 30px;  
font-weight: bold;

padding-top: 0px;  
margin-top: 0px;  
line-height

[niraj.tripathi@infoimageinc.com](mailto:niraj.tripathi@infoimageinc.com)

Redmine Installation  
<http://www.redmine.org/projects/redmine/wiki/RedmineInstall>

<http://bitnami.com/stack/redmine>

3\. Starting Server  
Use the following command root# /sbin/chkconfig mysqld on  
root# /etc/init.d/mysqld start  
root# ps -ef | grep mysql

4\. Stopping Server  
Use the following command. root# /etc/init.d/mysqld stop

4\. Oracle JDBC Driver  
4\. 1.  
Compatibility of JDBC Driver  
Which JDBC drivers support which versions of Oracle Database?  
<http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-
faq-090281.html#02_02>  
Which JDBC drivers support which versions of Javasoft's JDK?  
<http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-
faq-090281.html#02_03>

2\. 4. MySQL  
Driver/Datasource Class Names, URL Syntax and Configuration Properties for
Connector/J from MySQL 5.0 Reference  
<http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-configuration-
properties.html>

Guidelines for Multi-moduled Maven Project

Guidelines for Multi-moduled Maven Project  
1.1 Separate parent project from container project.  
1\. 2. Define properties in the parent POM file as possible.  
1\. 3. Define the following properties explicitly for clearness and control.  
Encoding related properties whose default value are dependent on platform.  
?project.build.sourceEncoding  
?project.reporting.outputEncoding  
Properties to skip situationally unnecessary long running goals.  
?skipTests  
?maven.javadoc.skip  
?maven.deploy.skip  
?checkstyle.skip  
Properties to run maven more stable way.  
?dependency.locations.enabled  
Paths for executable programs external to Maven  
?graphviz.home

1\. 4. Define all plugins in the <pluginManagement> element of parent POM
file.  
Don't specify version to plugin definitions in child POM files.  
1\. 5.  
Define repositories in the parent POM file as possible.  
1\. 6.  
Define plugins to analyze or diagnose the sources or resources of the project
as a reporting plugin as possible.  
1\. 7.  
Start values for path with ${project.basedir}, ${project.build.directory},
${project.build.outputDirectory} or so on  
When just specifying relative path such as 'target/classes', the result
directory could be different if you build the project from the enclosing
project in multi-module case.  
If you specify the path with leading ${project.build.directory}, the
resulting directory always would be one that is calculated with the current
POM's project.  
1\. 8.  
Use resources in target/classes not in src/main/resources, considering
resource filtering.

<http://3rdstage.blogspot.com/search/label/Maven>

<http://3rdstage.blogspot.com/search/label/misc>

sudo service mule_ee332 stop

Or you can use the JMX support to view the running state of ActiveMQ.  
<http://activemq.apache.org/jmx.html>


