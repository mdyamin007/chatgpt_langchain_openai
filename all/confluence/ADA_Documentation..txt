title: ADA Documentation.
body:   

STD| Requirement according to WCAG 2.0| Elements| Rules to follow  
---|---|---|---  
1.1.1 Non-text Content| All non-text content that is presented to the user has
a text alternative that serves the equivalent purpose, except for the
situations listed below. Controls, Input: If non-text content is a control or
accepts user input, then it has a name that describes its purpose. (Refer to
Success Criterion 4.1.2 for additional requirements for controls and content
that accepts user input.) Time-Based Media: If non-text content is time-based
media, then text alternatives at least provide descriptive identification of
the non-text content. (Refer to Guideline 1.2 for additional requirements for
media.) Test: If non-text content is a test or exercise that would be invalid
if presented in text, then text alternatives at least provide descriptive
identification of the non-text content. Sensory: If non-text content is
primarily intended to create a specific sensory experience, then text
alternatives at least provide descriptive identification of the non-text
content. CAPTCHA: If the purpose of non-text content is to confirm that
content is being accessed by a person rather than a computer, then text
alternatives that identify and describe the purpose of the non-text content
are provided, and alternative forms of CAPTCHA using output modes for
different types of sensory perception are provided to accommodate different
disabilities. Decoration, Formatting, Invisible: If non-text content is pure
decoration, is used only for visual formatting, or is not presented to users,
then it is implemented in a way that it can be ignored by assistive
technology.| Input| 1\. Every input elements should have aria-label, name and
placeholder (if needed).  
  
2\. Input element type radio and checkbox should have aria-label and proper
role.  
  
3\. Those div which contains radio group should have role="radiogroup".  
Select| Select element (dropdown) should have proper aria-label and role.  
  
Textarea| Textarea should have description aria-label.  
Button| 1\. Button should have proper value.  
  
2\. If buttons have value then aria-label is not necessary.  
  
3\. If buttons don't have value then the descriptive text of that button
should be placed inside <button></button> tag.  
Time based media| Not applicable for estatement website.  
Chaptcha| Captcha should contain proper aria-label or alt text.  
1.2.1 Audio-only and Video-only (Prerecorded)  
| For prerecorded audio-only and prerecorded video-only media, the following
are true, except when the audio or video is a media alternative for text and
is clearly labeled as such: Prerecorded Audio-only: An alternative for time-
based media is provided that presents equivalent information for prerecorded
audio-only content. Prerecorded Video-only: Either an alternative for time-
based media or an audio track is provided that presents equivalent information
for prerecorded video-only content.| Not applicable.| Not applicable for
estatement website.  
1.2.2 Captions (Prerecorded)  
| Captions are provided for all prerecorded audio content in synchronized
media, except when the media is a media alternative for text and is clearly
labeled as such.| Not applicable.| Not applicable for estatement website.  
1.2.3 Audio Description or Media Alternative (Prerecorded)| An alternative for
time-based media or audio description of the prerecorded video content is
provided for synchronized media, except when the media is a media alternative
for text and is clearly labeled as such.| Not applicable.| Not applicable for
estatement website.  
1.3.1  
Info and Relationships  
| Information, structure, and relationships conveyed through presentation can
be programmatically determined or are available in text.| Form|  **A form with
required fields:**  
A form contains several required fields. The labels for the required fields
are displayed in red. In addition, at the end of each label is an asterisk
character, *. The instructions for completing the form indicate that "all
required fields are displayed in red and marked with an asterisk "*", followed
by an example.  
  
 **A form that uses color and text to indicate required fields:**  
A form contains both required and optional fields. Instructions at the top of
the form explain that required fields are labeled with red text and also with
an icon whose text alternative says, "Required." Both the red text and the
icon are programmatically associated with the appropriate form fields so that
assistive technology users can determine the required fields.  
  
 **A form where the labels for the checkboxes can be programmatically
determined:**  
In a form, the labels for each checkbox can be programmatically determined by
assistive technology.  
  
1.3.2 Meaningful Sequence  
| When the sequence in which content is presented affects its meaning, a
correct reading sequence can be programmatically determined.| div, paragraph|
1\. If any div and paragraph should be focused by keyboard navigation then
tabindex="0" should be added to those div and paragraph.  
  
2\. tabindex="0" follows the hierarchy of DOM element. If you want to make
desirable navigation order then tabindex="1", tabindex="2" etc. should be
added accordingly.  
1.4.1 Use of Color  
| Color is not used as the only visual means of conveying information,
indicating an action, prompting a response, or distinguishing a visual
element.| CSS color attribute| 1\. It is needed to be ensured that all users
can access information that is conveyed by color differences, that is, by the
use of color where each color has a meaning assigned to it.  
  
2\. Color contrast ratio should not be extreme.  
2.1.1  
Keyboard  
| Note 1: This exception relates to the underlying function, not the input
technique. For example, if using handwriting to enter text, the input
technique (handwriting) requires path-dependent input but the underlying
function (text input) does not.  
  
Note 2: This does not forbid and should not discourage providing mouse input
or other input methods in addition to keyboard operation.  
  
Keyboard navigation should cover every interactive elements.| Keyboard
navigation| It is needed to be ensured that, wherever possible, content can be
operated through a keyboard or keyboard interface (so an alternate keyboard
can be used). When content can be operated through a keyboard or alternate
keyboard, it is operable by people with no vision (who cannot use devices such
as mice that require eye-hand coordination) as well as by people who must use
alternate keyboards or input devices that act as keyboard emulators.  
2.1.2 No Keyboard Trap| If keyboard focus can be moved to a component of the
page using a keyboard interface, then focus can be moved away from that
component using only a keyboard interface, and, if it requires more than
unmodified arrow or tab keys or other standard exit methods, the user is
advised of the method for moving focus away.  
  
Note 1: Since any content that does not meet this success criterion can
interfere with a user's ability to use the whole page, all content on the Web
page (whether it is used to meet other success criteria or not) must meet this
success criterion. See Conformance Requirement 5: Non-Interference.| Calendar
widget| 1\. Day, month and year sould be selectable by keyboard.  
  
2\. Calendar widget should have the closing functionality with the Esc
keypress.  
Modal dialog box| 1\. Modal should have proper role attribute.  
  
2\. When modal appears focus should be gone to that modal so that screen
reader starts to read the content into the modal.  
  
3\. It should have the closing functionality using keyboard.  
2.2.1  
Timing Adjustable  
| For each time limit that is set by the content, at least one of the
following is true:  
  
Turn off: The user is allowed to turn off the time limit before encountering
it; or  
  
Adjust: The user is allowed to adjust the time limit before encountering it
over a wide range that is at least ten times the length of the default
setting; or  
  
Extend: The user is warned before time expires and given at least 20 seconds
to extend the time limit with a simple action (for example, "press the space
bar"), and the user is allowed to extend the time limit at least ten times; or  
  
Real-time Exception: The time limit is a required part of a real-time event
(for example, an auction), and no alternative to the time limit is possible;
or  
  
Essential Exception: The time limit is essential and extending it would
invalidate the activity; or  
  
20 Hour Exception: The time limit is longer than 20 hours.| div element in
which error alert and success alert is shown| Error alert and success alert
messages fadeout time should be enough so that the alert message div is faded
out after the message inside that dive is read by screen reader.  
2.2.2  
Pause, Stop, Hide  
| For moving, blinking, scrolling, or auto-updating information, all of the
following are true:  
  
Moving, blinking, scrolling: For any moving, blinking or scrolling information
that (1) starts automatically, (2) lasts more than five seconds, and (3) is
presented in parallel with other content, there is a mechanism for the user to
pause, stop, or hide it unless the movement, blinking, or scrolling is part of
an activity where it is essential; and  
  
Auto-updating: For any auto-updating information that (1) starts automatically
and (2) is presented in parallel with other content, there is a mechanism for
the user to pause, stop, or hide it or to control the frequency of the update
unless the auto-updating is part of an activity where it is essential.|
Blinking elements, Stock ticker, Web advertisement, Animation, Form prompt| No
such element in estatement website.  
2.3.1  
Three Flashes or Below Threshold  
| Web pages do not contain anything that flashes more than three times in any
one second period, or the flash is below the general flash and red flash
thresholds.  
  
Note 1: Since any content that does not meet this success criterion can
interfere with a user's ability to use the whole page, all content on the Web
page (whether it is used to meet other success criteria or not) must meet this
success criterion. See Conformance Requirement 5: Non-Interference.| Flashing
elements like video, bright light flashes or red flashes| No such element in
estatement website.  
2.4.1  
Bypass Blocks  
| A mechanism is available to bypass blocks of content that are repeated on
multiple Web pages.  
  
The intent of this standard is to allow people who navigate sequentially
through content more direct access to the primary content of the Web page. Web
pages and applications often have content that appears on other pages or
screens. Examples of repeated blocks of content include but are not limited to
navigation links, heading graphics, and advertising frames. Small repeated
sections such as individual words, phrases or single links are not considered
blocks for the purposes of this provision.  
  
Screen reader users who visit several pages on the same site can avoid having
to hear all heading graphics and dozens of navigation links on every page
before the main content is spoken.| Bypass link element.| If menu items are
too many then a visually hidden link should be provided on top of the
navigation bar to navigate the user directly to the main content if user
wants. The bypass link will appear only when screen reader and keyboard
navigation is being used.  
2.4.2  
Page Titled| Web pages have titles that describe topic or purpose.| title
element| In hypercube title in all pages are "eStatements". It would be better
if title would changes with rendering new pages.  
2.4.3  
Focus Order  
| If a Web page can be navigated sequentially and the navigation sequences
affect meaning or operation, focusable components receive focus in an order
that preserves meaning and operability.| All the focusable element like modal,
interactive elements. (and also div and paragraph if needed)| Has been
described in section 2.1.1  
2.4.4  
Link Purpose (In Context)  
| The purpose of each link can be determined from the link text alone or from
the link text together with its programmatically determined link context,
except where the purpose of the link would be ambiguous to users in general.|
Anchor elements (<a></a>)| Every anchor elements should have meaningful
description.  
3.1.1  
Language of Page| The default human language of each Web page can be
programmatically determined.| Html lang attribute| Currently lang="en" but
should be able to changed programmatically.  
3.2.1  
On Focus  
| When any user interface component receives focus, it does not initiate a
change of context.| Any element that is focusable.| No focusable elements
available in estatement website that fires context switching events after
being focused.  
3.2.2  
On Input| Changing the setting of any user interface component does not
automatically cause a change of context unless the user has been advised of
the behavior before using the component.| Any interactive elements.| No
unpredictable events while entering data into input elements of checking
checkbox or radio element.  
3.3.1  
Error Identification| If an input error is automatically detected, the item
that is in error is identified and the error is described to the user in
text.| Form submitting error.| Meaningful error message should be provided
while occurring error and the error and alert standard should be followed.  
3.3.2  
Labels or Instructions| Labels or instructions are provided when content
requires user input.| Label element.| Has been described in section 1.1.1  
4.1.1  
Parsing  
| In content implemented using markup languages, elements have complete start
and end tags, elements are nested according to their specifications, elements
do not contain duplicate attributes, and any IDs are unique, except where the
specifications allow these features.  
  
Note 1: Start and end tags that are missing a critical character in their
formation, such as a closing angle bracket or a mismatched attribute value
quotation mark are not complete.| All html element with starting and closing
tag.| Every elements should have proper starting and closing tag. Should not
use duplicate id.  
Every elements should have proper role, name and value.  
  
  
4.1.2  
Name, Role, Value  
| For all user interface components (including but not limited to: form
elements, links and components generated by scripts), the name and role can be
programmatically determined; states, properties, and values that can be set by
the user can be programmatically set; and notification of changes to these
items is available to user agents, including assistive technologies.  
  
Note 1: This success criterion is primarily for Web authors who develop or
script their own user interface components. For example, standard HTML
controls already meet this success criterion when used according to
specification.| All elements| Has been described in section 1.1.1  
  
  


