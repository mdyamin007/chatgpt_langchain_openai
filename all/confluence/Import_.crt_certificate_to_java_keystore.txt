title: Import .crt certificate to java keystore
body: When you impoer .crt file into java keystore, you may get following exception:

"java.lang.exception: input not an x.509 certificate".

 **Solution: A**

It's likely the .crt file is carrying additional info not needed.  
Open the .crt file in plain text editor, ensure the file starts with

    
    
    -----BEGIN CERTIFICATE-----

  
and ends with

    
    
    -----END CERTIFICATE-----

  

 **Solution: B**

Enter the password as you want in below two command:

 _Generate pkcs12 format keystore:_  
openssl pkcs12 -export -name <domain_name> -in <certificate_name>.crt -inkey
<certificate_name>.key -out keystore.p12

 _Convert pkcs12 keystore to java keystore_  
keytool -importkeystore -destkeystore tomcat.jks -srckeystore keystore.p12
-srcstoretype pkcs12 -alias <domain_name>

 _Check your certificate in keystore:_  
keytool -list -v -keystore tomcat.jks  
  

# Complete Reference for all related commands

    
    
    // extract ssl certificate & key from pfx file:
    sudo openssl pkcs12 -in bkcu-20140106.pfx -clcerts -nokeys -out esignatures.bfcu.org.crt
    sudo openssl pkcs12 -in bkcu-20140106.pfx -nocerts -nodes -out esignatures.bfcu.org.key
    sudo openssl pkcs12 -in infoimageinc-2015.pfx -clcerts -nokeys -out infoimageinc.crt
    sudo openssl pkcs12 -in infoimageinc-2015.pfx -nocerts -nodes -out infoimageinc.key
    
    // check values inside .crt certifiate file
    keytool -printcert -v -file infoimageinc.crt
    
    // convert .crt and .key to .p12 (for importing to tomcat's keystore)
    openssl pkcs12 -export -name *.infoimageinc.com -in infoimageinc.crt -inkey infoimageinc.key -out infoimageinc.p12
    
    // check certificate values inside .p12 keystore
    keytool -list -v -storetype PKCS12 -keystore infoimageinc.p12
    
    // importing .p12 into tomcat's jks keystore file
    keytool -importkeystore -destkeystore tomcat.jks -alias *.infoimageinc.com -srcstoretype pkcs12 -srckeystore infoimageinc.p12 
    
    // check certificate values inside .jks
    keytool -list -v -keystore tomcat.jks
    
    // check certificates inside jdk's cacerts
    keytool -list -v -keystore $JAVA_HOME/jre/lib/security/cacerts
    keytool -list -v -keystore $JAVA_HOME/jre/lib/security/cacerts -alias pd-pilot1.infoimageinc.com
    
    // export .crt from .p12
    keytool -exportcert -keystore /home/sogadm/MB_copy/MB_client.p12 -storepass 123456 -storetype PKCS12 -alias p12_entry_alias -file /home/sogadm/MB_copy/MB_client.cer
    
    // delete expired/existing certificate from cacerts (before import new one)
    keytool -delete -alias pd-pilot1.infoimageinc.com -keystore cacerts
    
    // import .crt to jdk's truststore cacerts
    keytool -importcert -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -alias pd-pilot1.infoimageinc.com -file infoimageinc.crt


