Key points:
Combination of Outline command, text subcommand display text.
Here the marked tiny purple-colored box means the outline position inside where we placed the text commands.
You can use relative positional keyword ( same, lastmax, current) to place texts.
Here texts are horizontally in the same position and vertically one after another.
You can also use fixed positions. But the positions are actually with respective to outline positions.
Here the text is printed in 0,0 position or coordinates. But these coordinates are with respect to the outline position in which the text subcommand is used. As you see in the example the marked text is not in actually the top-left position of the page.
You can use fixed positions in outline commands or keywords ( top , left, same, lastmax etc...)
Here top left value will come from the last margin executed before this outline command. If same lastmax is used it will be relative to the previous outline like text commands.
Do not print too much content in a single outline.
Let's say there are so many transactions like 10000 or more. And you are printing those using a single outline and for loop inside it. This couldn't cause the papyrus to hang forever. Check the outline video. Better use outline repeat option or put the outline inside for loop.
Better to use self define font names rather than actual font codes(ar090..)
if the same font and size is used in different sections it's better to define and use your own font definitions so that if next time the font type or size needs to be changed for those sections , you just need to change in font definitions.
If width is not defined in the text subcommand then the right margin will come into play to set the width.
Here width is not defined. So the width of the text is enlarged up the right margin that was defined before the outline command (0.5 inch) for this example.
Margin command
Use margins to control the spacing to the left, right, top, bottom. LEFT, RIGHT, TOP, BOTTOM keywords can be used in outline commands the values of these will be retrieved from the margin values. You can use a fixed starting position meaning the top left position while defining the outline in that it will not respect the left and top margin but still the right and bottom margin will be respected, the text width will respect the right margin, and also if the texts cross the bottom margin it will be printed in the next page.
Use Margin variable in formatgroup Footer to control margin for next pages
Use margins variables $mr_bottoom, $mr_right, etc if those values should be the same with the previous margin, try not to use the actual number here. Only use actual no in the margin which should be different from the previous margin let's only top margin should be different in subsequent pages, in that case, use the actual number for top margin and use margin variables for rest.
The bottom and right margins always get respected. The top margin will be respected while overflowing to the next pages.
as you are seeing in the snap the top margin of 3.5 is correctly applied on the next pages, but the bottom and right margin to all pages. Those are automatic. You can break the top margin by using actual no position in outline vertical input and also left margin in horizontal input by rest of margins will be followed correctly.
outline:
Margin:
Tagged:marginoutline